;-----------------------------------------------------------------------
; gob_esp_now examples
;-----------------------------------------------------------------------
[env]
;platform = espressif32 @4.4.0 ; Since the heap at the setup() is small after 5.x
platform = espressif32 ; Since the heap at the setup() is small after 5.x
framework = arduino

lib_deps = m5stack/M5Unified @ 0.1.12
  gob/gob_unifiedButton
  
lib_ldf_mode = deep

monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
upload_speed = 1500000
build_unflags = -fexceptions
build_flags = -fno-exceptions  -Wall -Wextra -Wreturn-local-addr -Werror=format -Werror=return-local-addr
board_build.partitions = min_spiffs.csv

board_build.flash_mode = qio
board_build.f_flash = 80000000L

; --------------------------------
[option_release]
build_flags =  -DCORE_DEBUG_LEVEL=3
 -DLOG_LOCAL_LEVEL=3
 -DAPP_LOG_LEVEL=3

[option_log]
build_flags =  -DCORE_DEBUG_LEVEL=5
  -DLOG_LOCAL_LEVEL=5
  -DAPP_LOG_LEVEL=5

[option_debug]
build_flags =  -DCORE_DEBUG_LEVEL=4
 -DLOG_LOCAL_LEVEL=4
 -DAPP_LOG_LEVEL=4
 -DDEBUG

;-----------------------------------------------------------------------
[devices]
; Set your devices MAC address for examples
build_flags = 
  -DDEVICE_A="\"30:c6:f7:1d:1c:cc\""
  -DDEVICE_B="\"a4:cf:12:6d:87:1c\""
  -DDEVICE_C="\"f4:12:fa:84:8e:48\""

;-----------------------------------------------------------------------
; Examples
; [1on1] Send button status between A and B
[env:1on1]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/1on1/>  +<../examples/shared/>

[env:1on1_dbg]
board = m5stack-core-esp32 
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/1on1/> +<../examples/shared/>

[env:1on1_CoreS3]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/1on1/> +<../examples/shared/>

[env:1on1_CoreS3_dbg]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/1on1/> +<../examples/shared/>

;[file_transfer] File transfer between A and B
[env:file_transfer]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} ${devices.build_flags} -DSD_FAT_TYPE=3
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/file_transfer/>
lib_deps = ${env.lib_deps} 
  greiman/SdFat
  RobTillaart/CRC

[env:file_transfer_dbg]
board = m5stack-core-esp32 
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} ${devices.build_flags} -DSD_FAT_TYPE=3
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/file_transfer/>
lib_deps = ${env.lib_deps} 
  greiman/SdFat
  RobTillaart/CRC

[env:file_transfer_CoreS3]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} ${devices.build_flags} -DSD_FAT_TYPE=3
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/file_transfer/>
lib_deps = ${env.lib_deps} 
  greiman/SdFat
  RobTillaart/CRC

[env:file_transfer_CoreS3_dbg]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} ${devices.build_flags} -DSD_FAT_TYPE=3
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/file_transfer/>
lib_deps = ${env.lib_deps} 
  greiman/SdFat
  RobTillaart/CRC

;[star] Star connection for multiple devices
[env:star]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} 
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/star/> +<../examples/shared/>

[env:star_dbg]
board = m5stack-core-esp32 
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} 
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/star/> +<../examples/shared/>

[env:star_CoreS3]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/star/> +<../examples/shared/>

[env:star_CoreS3_dbg]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/star/> +<../examples/shared/>

;[s3_cam] Sending and receiving camera-captured images (Sender must be CoreS3, Core,Core2 only receiver)
[env:s3_camera]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/s3_camera/>
lib_deps = ${env.lib_deps} 
  RobTillaart/CRC

[env:s3_camera_dbg]
board = m5stack-core-esp32 
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/s3_camera/>
lib_deps = ${env.lib_deps} 
  RobTillaart/CRC

[env:s3_camera_CoreS3]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
build_type=release
build_flags=${env.build_flags} ${option_release.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/s3_camera/>
lib_deps = ${env.lib_deps} 
  RobTillaart/CRC

[env:s3_camera_CoreS3_dbg]
board = esp32s3box
board_build.arduino.memory_type = qio_qspi
build_type=debug
build_flags=${env.build_flags} ${option_debug.build_flags} ${devices.build_flags}
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/s3_camera/>
lib_deps = ${env.lib_deps} 
  RobTillaart/CRC

;[racing] P2P racing game
[env:racing]
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_log.build_flags} 
  ;-Wl,-Map,output.map
build_src_filter = +<*> -<.git/> -<.svn/> +<../examples/p2p_CircuitRacer/>

;-----------------------------------------------------------------------
; For googltest
[env:test]
test_framework = googletest
test_build_src = true
board = m5stack-core-esp32 
build_type=release
build_flags=${env.build_flags} ${option_log.build_flags} 
