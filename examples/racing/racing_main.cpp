/*
  Sample of M5Stack racing game eample modified to allow p2p matches
 */

#define ANALOG_CENTER 1864
//#define SOUND_VOLUME 64     // speaker volume setting (default:64)
#define SOUND_VOLUME 0

#include <M5Unified.h>

#include <FreeRTOS/freeRTOS.h>
#include <FreeRTOS/semphr.h>
#include <WiFi.h>
#include <gob_esp_now.hpp>
#include "startTRX.hpp"
#include "inputTRX.hpp"
#include <esp_sntp.h>
#include <esp_bt.h>
#include <esp_bt_main.h>
#include <ctime>
#include <chrono>

using namespace goblib::esp_now;

static time_t startTime{};
static int countDown{};
static uint8_t deviceId{0x00};
constexpr char posixTZ[] = "JST-9"; // To be the same on each device.
static LGFX_Sprite cd_sprite;

PROGMEM const char ntp0[] = "ntp.nict.jp";
PROGMEM const char ntp1[] = "ntp.jst.mfeed.ad.jp";
PROGMEM const char ntp2[] = "time.cloudflare.com";
const char* ntp[] = { ntp0, ntp1, ntp2 };

static auto &display = M5.Display;
static bool input_pressed = false;

static auto& comm = goblib::esp_now::Communicator::instance();
static MACAddress target;
static constexpr uint8_t APP_ID = 3;
static constexpr uint8_t START_TRX_ID = 1;
static constexpr uint8_t INPUT_TRX_ID = 2;
static StartTRX startTRX(START_TRX_ID);
static InputTRX inputTRX(INPUT_TRX_ID);

// Time synchronization
void configTime()
{
    // WiFi connect
    WiFi.begin(); // Connect to credential in Hardware. (ESP32 saves the last WiFi connection)
    int tcount = 32;
    while(tcount-- > 0 && WiFi.status() != WL_CONNECTED)
    {
        display.printf(".");
        delay(1000);
    }
    if(WiFi.status() != WL_CONNECTED)
    {
        display.clear(TFT_RED);
        display.setCursor(0,0);
        display.printf("Failed to connect WiFi");
        M5_LOGE("Failed to connect WiFi");
        while(true) { delay(1000); }
    }
    M5_LOGI("WiFi connected");

    configTzTime(posixTZ, ntp[0], ntp[1], ntp[2]);
    int32_t retry{10};    
    sntp_sync_status_t st;
    while( ((st = sntp_get_sync_status()) == SNTP_SYNC_STATUS_RESET) && --retry >= 0)
    {
        M5_LOGI("   ...sync");
        delay(1000);
    }
    M5_LOGI("st:%d retry:%d", st, retry);
    {
        std::tm discard{};
        if((st != SNTP_SYNC_STATUS_COMPLETED) || !getLocalTime(&discard, 10 * 1000 /* timeout */))
        {
            display.clear(TFT_RED);
            display.setCursor(0,0);
            display.printf("Failed to configTime");
            M5_LOGE("Failed to configTime");
            delay(1000);
            abort();
        }
    }
    WiFi.disconnect(true);
    WiFi.mode(WIFI_OFF);
}

int32_t funcInputLeftRight(void)
{
  static int32_t current_lr = 0;

  int32_t target_lr = 0;
  {
    static int prev_value = 0;
    int value = prev_value;
    if (M5.BtnA.isPressed())
    {
      value -= 256;
    }
    switch (M5.getBoard())
    {
    case m5::board_t::board_M5StickC:
    case m5::board_t::board_M5StickCPlus:
      if (M5.BtnB.isPressed())
      {
        value += 256;
      }
      break;

    default:
      if (M5.BtnB.isPressed())
      {
        input_pressed |= true;
      }

      if (M5.BtnC.isPressed())
      {
        value += 256;
      }
      break;
    }
    if (value && value == prev_value)
    {
      value += (value < 0) ? 256 : -256;
    }
    prev_value = value;
    target_lr += value;
  }

  if (current_lr != target_lr)
  {
    int add = (abs(target_lr - current_lr) >> 3) + 1;
    if (current_lr < target_lr)
    {
      current_lr = std::min(target_lr, current_lr + add);
    }
    else
    {
      current_lr = std::max(target_lr, current_lr - add);
    }
  }

  if (current_lr == 0)
  {
    auto tp = M5.Touch.getDetail();
    if (tp.isPressed())
    {

      return ((tp.x - (display.width() >> 1)) << 16) / display.width();
    }
  }
  return current_lr;
}

bool funcInputEnter(void)
{
  if (input_pressed)
  {
    input_pressed = false;
    return true;
  }
  return false;
}

enum texture_id_t : uint8_t
{
  outside,
  flag_1,
  road_1,
  curb_000111111,
  curb_011011011,
  curb_101101111,
  curb_111001111,
  curb_010010111,
  curb_001111001,
  curb_000010111,
  curb_001011001,
  curb_100111000,
  curb_110010010,
  curb_100111001,
  curb_110010011,

  curb_100110111,
  curb_000110110,
  curb_000110111,
  curb_100111111,
  curb_011011001,
  curb_111011011,
  curb_001101111,
  curb_011001111,
  curb_000111000,
  curb_010010010,

  curb_000010000,
  texture_id_max,
  io_invert = 0x20, /// コース内外を反転;
  ud_invert = 0x40, /// 上下を反転;
  lr_invert = 0x80, /// 左右を反転;
  flag_2 = flag_1 | io_invert,
  road_2 = road_1 | ud_invert,
  road_3 = road_1 | lr_invert,
  road_4 = road_1 | lr_invert | ud_invert,

  curb_111000000 = curb_000111111 | io_invert,
  curb_100100100 = curb_011011011 | io_invert,
  curb_010010000 = curb_101101111 | io_invert,
  curb_000110000 = curb_111001111 | io_invert,
  curb_101101000 = curb_010010111 | io_invert,
  curb_110000110 = curb_001111001 | io_invert,
  curb_111101000 = curb_000010111 | io_invert,
  curb_110100110 = curb_001011001 | io_invert,
  curb_011000111 = curb_100111000 | io_invert,
  curb_001101101 = curb_110010010 | io_invert,
  curb_011000110 = curb_100111001 | io_invert,
  curb_001101100 = curb_110010011 | io_invert,
  curb_011001000 = curb_100110111 | io_invert,
  curb_111001001 = curb_000110110 | io_invert,
  curb_111001000 = curb_000110111 | io_invert,
  curb_011000000 = curb_100111111 | io_invert,
  curb_100100110 = curb_011011001 | io_invert,
  curb_000100100 = curb_111011011 | io_invert,
  curb_110010000 = curb_001101111 | io_invert,
  curb_100110000 = curb_011001111 | io_invert,
  curb_111000111 = curb_000111000 | io_invert,
  curb_101101101 = curb_010010010 | io_invert,
  curb_111101111 = curb_000010000 | io_invert,

  curb_111111000 = curb_000111111 | ud_invert,
  curb_000000111 = curb_111000000 | ud_invert,
  curb_110110110 = curb_011011011 | lr_invert,
  curb_001001001 = curb_100100100 | lr_invert,
  curb_000010010 = curb_010010000 | ud_invert,
  curb_111101101 = curb_101101111 | ud_invert,
  curb_000011000 = curb_000110000 | lr_invert,
  curb_111100111 = curb_111001111 | lr_invert,
  curb_111010010 = curb_010010111 | ud_invert,
  curb_000101101 = curb_101101000 | ud_invert,
  curb_100111100 = curb_001111001 | lr_invert,
  curb_011000011 = curb_110000110 | lr_invert,
  curb_000101111 = curb_111101000 | ud_invert,
  curb_111010000 = curb_000010111 | ud_invert,
  curb_011001011 = curb_110100110 | lr_invert,
  curb_100110100 = curb_001011001 | lr_invert,

  curb_001111100 = curb_100111001 | ud_invert,
  curb_110000011 = curb_011000110 | ud_invert,
  curb_011010110 = curb_110010011 | ud_invert,
  curb_100101001 = curb_001101100 | ud_invert,

  curb_111000011 = curb_011000111 | ud_invert,
  curb_110000111 = curb_011000111 | lr_invert,
  curb_111000110 = curb_011000111 | ud_invert | lr_invert,
  curb_000111100 = curb_100111000 | ud_invert,
  curb_001111000 = curb_100111000 | lr_invert,
  curb_000111001 = curb_100111000 | ud_invert | lr_invert,
  curb_101101001 = curb_001101101 | ud_invert,
  curb_100101101 = curb_001101101 | lr_invert,
  curb_101101100 = curb_001101101 | ud_invert | lr_invert,
  curb_010010110 = curb_110010010 | ud_invert,
  curb_011010010 = curb_110010010 | lr_invert,
  curb_010010011 = curb_110010010 | ud_invert | lr_invert,

  curb_111110100 = curb_100110111 | ud_invert,
  curb_001011111 = curb_100110111 | lr_invert,
  curb_111011001 = curb_100110111 | lr_invert | ud_invert,
  curb_000001011 = curb_011001000 | ud_invert,
  curb_110100000 = curb_011001000 | lr_invert,
  curb_000100110 = curb_011001000 | lr_invert | ud_invert,
  curb_110110000 = curb_000110110 | ud_invert,
  curb_000011011 = curb_000110110 | lr_invert,
  curb_011011000 = curb_000110110 | lr_invert | ud_invert,
  curb_001001111 = curb_111001001 | ud_invert,
  curb_111100100 = curb_111001001 | lr_invert,
  curb_100100111 = curb_111001001 | lr_invert | ud_invert,
  curb_111110000 = curb_000110111 | ud_invert,
  curb_000011111 = curb_000110111 | lr_invert,
  curb_111011000 = curb_000110111 | lr_invert | ud_invert,
  curb_000001111 = curb_111001000 | ud_invert,
  curb_111100000 = curb_111001000 | lr_invert,
  curb_000100111 = curb_111001000 | lr_invert | ud_invert,
  curb_111111100 = curb_100111111 | ud_invert,
  curb_001111111 = curb_100111111 | lr_invert,
  curb_111111001 = curb_100111111 | lr_invert | ud_invert,
  curb_000000011 = curb_011000000 | ud_invert,
  curb_110000000 = curb_011000000 | lr_invert,
  curb_000000110 = curb_011000000 | lr_invert | ud_invert,
  curb_001011011 = curb_011011001 | ud_invert,
  curb_110110100 = curb_011011001 | lr_invert,
  curb_100110110 = curb_011011001 | lr_invert | ud_invert,
  curb_110100100 = curb_100100110 | ud_invert,
  curb_001001011 = curb_100100110 | lr_invert,
  curb_011001001 = curb_100100110 | lr_invert | ud_invert,
  curb_011011111 = curb_111011011 | ud_invert,
  curb_111110110 = curb_111011011 | lr_invert,
  curb_110110111 = curb_111011011 | lr_invert | ud_invert,
  curb_100100000 = curb_000100100 | ud_invert,
  curb_000001001 = curb_000100100 | lr_invert,
  curb_001001000 = curb_000100100 | lr_invert | ud_invert,
  curb_111101001 = curb_001101111 | ud_invert,
  curb_100101111 = curb_001101111 | lr_invert,
  curb_111101100 = curb_001101111 | lr_invert | ud_invert,
  curb_000010110 = curb_110010000 | ud_invert,
  curb_011010000 = curb_110010000 | lr_invert,
  curb_000010011 = curb_110010000 | lr_invert | ud_invert,
  curb_111001011 = curb_011001111 | ud_invert,
  curb_110100111 = curb_011001111 | lr_invert,
  curb_111100110 = curb_011001111 | lr_invert | ud_invert,
  curb_000110100 = curb_100110000 | ud_invert,
  curb_001011000 = curb_100110000 | lr_invert,
  curb_000011001 = curb_100110000 | lr_invert | ud_invert,
};

#define TEXTURE_SIZE 32

#define I0  0  // 路上0
#define I1  1  // 路上1
#define I2  2  // 路上2
#define I3  3  // 路上3
#define F0  4  // ゴール 白0
#define F1  5  // ゴール 黒0
#define S0  6  // ゴーストカー 影
//#define S1 7 // reserved
#define R0  8  // 縁石 赤0
#define R1  9  // 縁石 赤1
#define R2 10  // 縁石 赤2
#define R3 11  // 縁石 赤3
#define W0 12  // 縁石 白0
#define W1 13  // 縁石 白1
#define W2 14  // 縁石 白2
#define W3 15  // 縁石 白3
#define O0 16  // コース外0
#define O1 17  // コース外1
#define O2 18  // コース外2
#define O3 19  // コース外3

enum texture_palette_id_t : uint8_t
{
  pal_inside_0 = I0,
  pal_inside_1 = I1,
  pal_inside_2 = I2,
  pal_inside_3 = I3,
  pal_flag_0 = F0,
  pal_flag_1 = F1,
  pal_shadow = S0,
  //pal_reserved = S1,
  pal_red_0 = R0,
  pal_red_1 = R1,
  pal_red_2 = R2,
  pal_red_3 = R3,
  pal_white_0 = W0,
  pal_white_1 = W1,
  pal_white_2 = W2,
  pal_white_3 = W3,
  pal_outside_0 = O0,
  pal_outside_1 = O1,
  pal_outside_2 = O2,
  pal_outside_3 = O3,
  pal_max,
};

static constexpr uint8_t texture_000111111[] = {
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
};

static constexpr uint8_t texture_000111000[] = {
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,

  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
};

static constexpr uint8_t texture_000110111[] = {
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,O0,O0,
  R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,

  R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,
  I0,I0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,
};

static constexpr uint8_t texture_100111111[] = {
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,
};

static constexpr uint8_t texture_100111001[] = {
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,

  R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
};

static constexpr uint8_t texture_100111000[] = {
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,

  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
};

static constexpr uint8_t texture_100110111[] = {
  I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,
  I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,O0,O0,O0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,O0,O0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,O0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,
};

static constexpr uint8_t texture_000110110[] = {
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,O0,O0,O0,O0,O0,O0,
  R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,O0,O0,O0,O0,O0,

  R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,O0,O0,O0,O0,
  I0,I0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,O0,O0,O0,
  I0,I0,I0,I0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,O0,
  I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,O0,
  I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,

  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
};

static constexpr uint8_t texture_010010111[] = {
  W0,W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,
  W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,
  R0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,R0,
  R0,R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,
  R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,
  R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,
  R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,
  R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,
};

static constexpr uint8_t texture_101101111[] = {
  W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,
  W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,

  W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,
  W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,

  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,
  I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,
  I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,
  I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,
  I0,I0,I0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,I0,I0,I0,
  I0,I0,I0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,I0,I0,I0,

  I0,I0,I0,I0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
};

static constexpr uint8_t texture_000010111[] = {
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,O0,O0,O0,O0,
  O0,O0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,O0,O0,
  R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,

  R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,

  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,I0,I0,I0,I0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,I0,I0,I0,I0,I0,I0,I0,I0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,
  R0,R0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,R0,R0,
};

static constexpr uint8_t texture_001101111[] = {
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,

  R0,R0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,
  R0,R0,R0,R0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,
  R0,R0,R0,R0,R0,R0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,O0,O0,O0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,

  R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,
  R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,
  R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,
  R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,
  R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,
  R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,

  R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,
  I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,
  I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,W0,W0,W0,W0,W0,W0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,I0,

};

static constexpr uint8_t texture_000010000[] = {
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,O0,O0,O0,O0,
  O0,O0,O0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,O0,O0,O0,
  O0,O0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,O0,O0,
  O0,O0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,O0,O0,
  O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,O0,
  O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,
  O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,I0,I0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,I0,I0,I0,I0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,
  O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,
  O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,R0,O0,
  O0,R0,R0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,R0,R0,O0,
  O0,O0,R0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,R0,O0,O0,
  O0,O0,R0,R0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,R0,R0,O0,O0,
  O0,O0,O0,R0,R0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,R0,R0,O0,O0,O0,
  O0,O0,O0,O0,R0,R0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,R0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
  O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,W0,W0,W0,W0,W0,W0,W0,W0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,O0,
};

#undef I0
#undef I1
#undef I2
#undef I3
#undef R0
#undef R1
#undef R2
#undef R3
#undef W0
#undef W1
#undef W2
#undef W3
#undef F0
#undef F1
#undef S0
#undef O0
#undef O1
#undef O2
#undef O3

static constexpr const uint8_t wav_engine[] = {
0x7e, 0x43, 0x3b, 0x63, 0x7a, 0x4e, 0x40, 0x5f, 0x9e, 0xe5, 0xf7, 0xac, 0x2b, 0x48, 0xc3, 0xd4,
0xb9, 0x8d, 0x77, 0x5b, 0x50, 0x47, 0x5e, 0x89, 0x96, 0x6b, 0x4b, 0x54, 0x5e, 0x8b, 0xc1, 0xd7,
0x77, 0x39, 0xa1, 0xfe, 0xd6, 0x89, 0x6d, 0x68, 0x3c, 0x4a, 0x85, 0x6a, 0x69, 0x91, 0x8a, 0x3e,
0x39, 0xa5, 0xc1, 0x97, 0x86, 0x66, 0x72, 0xb4, 0xa9, 0x7c, 0x85, 0x8e, 0x8b, 0x6a, 0x35, 0x33,
0x6a, 0x9b, 0x80, 0x36, 0x42, 0xa9, 0xf5, 0xf0, 0xd2, 0x35, 0x1c, 0x95, 0xe0, 0xbd, 0x9f, 0x83,
0x4c, 0x37, 0x61, 0x79, 0x6e, 0x7b, 0x87, 0x3b, 0x1f, 0x51, 0x8e, 0xae, 0xde, 0xb5, 0x52, 0x62,
0xc5, 0xc1, 0x96, 0xa2, 0x98, 0x5d, 0x57, 0x63, 0x5f, 0x82,
};

static constexpr uint16_t qsintab[256] = {
    0x0000,0x0194,0x0327,0x04BB,0x064F,0x07E2,0x0976,0x0B09,0x0C9C,0x0E2F,0x0FC2,0x1155,0x12E8,0x147A,0x160D,0x179F,
    0x1931,0x1AC2,0x1C54,0x1DE5,0x1F75,0x2106,0x2296,0x2426,0x25B5,0x2745,0x28D3,0x2A62,0x2BEF,0x2D7D,0x2F0A,0x3097,
    0x3223,0x33AE,0x3539,0x36C4,0x384E,0x39D8,0x3B61,0x3CE9,0x3E71,0x3FF8,0x417F,0x4305,0x448A,0x460F,0x4792,0x4916,
    0x4A98,0x4C1A,0x4D9B,0x4F1B,0x509B,0x521A,0x5398,0x5515,0x5691,0x580D,0x5987,0x5B01,0x5C7A,0x5DF2,0x5F69,0x60DF,
    0x6254,0x63C9,0x653C,0x66AE,0x681F,0x6990,0x6AFF,0x6C6D,0x6DDA,0x6F47,0x70B2,0x721B,0x7384,0x74EC,0x7653,0x77B8,
    0x791C,0x7A7F,0x7BE1,0x7D42,0x7EA1,0x8000,0x815C,0x82B8,0x8413,0x856C,0x86C4,0x881A,0x8970,0x8AC3,0x8C16,0x8D67,
    0x8EB7,0x9006,0x9153,0x929E,0x93E8,0x9531,0x9679,0x97BE,0x9903,0x9A46,0x9B87,0x9CC7,0x9E05,0x9F42,0xA07D,0xA1B7,
    0xA2EF,0xA426,0xA55B,0xA68E,0xA7C0,0xA8F0,0xAA1F,0xAB4B,0xAC77,0xADA0,0xAEC8,0xAFEE,0xB112,0xB235,0xB356,0xB475,
    0xB593,0xB6AE,0xB7C8,0xB8E0,0xB9F7,0xBB0B,0xBC1E,0xBD2F,0xBE3E,0xBF4B,0xC057,0xC160,0xC268,0xC36D,0xC471,0xC573,
    0xC673,0xC771,0xC86D,0xC967,0xCA60,0xCB56,0xCC4A,0xCD3C,0xCE2D,0xCF1B,0xD007,0xD0F1,0xD1DA,0xD2C0,0xD3A4,0xD486,
    0xD566,0xD644,0xD720,0xD7FA,0xD8D1,0xD9A7,0xDA7A,0xDB4C,0xDC1B,0xDCE8,0xDDB3,0xDE7C,0xDF42,0xE007,0xE0C9,0xE189,
    0xE247,0xE303,0xE3BC,0xE473,0xE529,0xE5DB,0xE68C,0xE73A,0xE7E6,0xE890,0xE938,0xE9DD,0xEA80,0xEB21,0xEBC0,0xEC5C,
    0xECF6,0xED8D,0xEE23,0xEEB6,0xEF46,0xEFD5,0xF061,0xF0EA,0xF172,0xF1F7,0xF279,0xF2FA,0xF377,0xF3F3,0xF46C,0xF4E3,
    0xF558,0xF5CA,0xF639,0xF6A7,0xF711,0xF77A,0xF7E0,0xF844,0xF8A5,0xF904,0xF960,0xF9BA,0xFA12,0xFA67,0xFABA,0xFB0A,
    0xFB58,0xFBA3,0xFBEC,0xFC33,0xFC77,0xFCB8,0xFCF7,0xFD34,0xFD6E,0xFDA6,0xFDDB,0xFE0E,0xFE3F,0xFE6D,0xFE98,0xFEC1,
    0xFEE7,0xFF0B,0xFF2D,0xFF4C,0xFF69,0xFF83,0xFF9A,0xFFAF,0xFFC2,0xFFD2,0xFFE0,0xFFEB,0xFFF4,0xFFFA,0xFFFE,0xFFFF,
};

//Returns value -64K...64K
static int isin(int i) {
  i = (i & 1023);
  if (i >= 512) return -isin(i - 512);
  if (i >= 256) i = (511 - i);
  return qsintab[i];
}

static int icos(int i) {
  return isin(i + 256);
}

enum game_mode_t
{
  nothing = 0,
  choose_connection,
  waiting,
  stage_select,
  racing,
};

//#define DRIFT_LEVEL 7
#define DRIFT_LEVEL 0
#define REPLAY_STEP_MAX 384
#define REPLAY_SPAN_SHIFT 8   // 8 == 256msec span

struct point_u16_t
{
  uint16_t x;
  uint16_t y;
};

static int32_t stage_index = 0;
static int32_t stage_index_x256 = 0;
static int32_t stage_index_x256_target = 0;
static float stage_select_angle = 0;

//static point_u16_t current_replay[REPLAY_STEP_MAX];
//static point_u16_t record_replay[REPLAY_STEP_MAX];

//static volatile game_mode_t game_mode = game_mode_t::nothing;
static volatile game_mode_t game_mode = game_mode_t::choose_connection;
//static std::uint32_t msec_best_lap = ~0u;
//static std::uint32_t msec_prev_lap = 0;
static char lap_str[2][64]{};;

static std::int32_t lcd_width;
static std::int32_t lcd_height;

static std::uint_fast8_t flip = 0;
static LGFX_Sprite sprites[2];
static size_t sprite_height;

static LGFX_Sprite sp_background; // 遠景;
static LGFX_Sprite sp_texture[texture_id_max]; // テクスチャデータ;
static LGFX_Sprite sp_map; // マップデータ;
//static LGFX_Sprite sp_steering; // ステアリング画像;
//static LGFX_Sprite sp_panel;  // メーターパネル画像;
//static LGFX_Sprite sp_needle; // メーター針画像;

static volatile int player_steering_angle = 0;
#if 0
static volatile int player_x; // 自機座標;
static volatile int player_y;
static volatile float player_tacho = 0;
static volatile float player_speed = 0;
static volatile uint32_t player_f;   // 自機角度;
#endif

// Car class
struct Car
{
  int x{},y{}; // 座標
  int steering_angle{}; // ステアリング角度
  float tacho{};
  float speed{};
  uint32_t f{};
  int yaw{};     /// 旋回動作増分;
  int add_x{}, add_y{};
  int f16{};
  int prev_texture_id{};
  uint32_t msec_lapstart{}, lap_time{}, laps{};

  void update(int sa, uint32_t msec, bool self)
  {
    this->steering_angle = sa;
    this->yaw += this->steering_angle;
    this->yaw = ((this->yaw * 16) + 8) / 17;
    this->f = ((this->f16 += this->yaw) >> 16) & 1023;

    auto rcos = icos(this->f);
    auto rsin = isin(this->f);

    size_t next_x = (this->x + this->add_x);
    size_t tmp_x = next_x >> 16;
    size_t next_y = (this->y + this->y);
    size_t tmp_y = this->y >> 16;

    uint32_t texture_id = texture_id_t::outside;
    if ((tmp_x | tmp_y) < 256)
    {
        texture_id = sp_map.readPixelValue(tmp_x, tmp_y);
    }

    int add_x = (this->add_x >> 3);
    int add_y = (this->add_y >> 3);
    int speed = ((add_x * add_x) + (add_y * add_y)) >> 16;
    float tacho = speed / 4.0f;
    this->speed = (this->speed * 2 + (speed / 2.2f)) / 4;
    if (tacho < 20.0f) { tacho = 20.0f; }
    else
    {
      while (tacho > 100.0f)
      {
        tacho = tacho * 0.73f;
      }
    }
    this->tacho = (this->tacho * 3 + tacho * 2.2f) / 4;

#if defined (__M5UNIFIED_HPP__) && ( SOUND_VOLUME > 0 )
    if(self)
    {
      int32_t drifted_f = (int32_t)(atan2f(add_y, add_x) * 512 / M_PI) & 0x3FF;

      //printf("rad:%04d  %04d  %04d\r\n", drifted_f, player_f, diff);
      M5.Speaker.tone(this->tacho / 2, 128, 0, true, wav_engine, sizeof(wav_engine));

      uint32_t diff = (drifted_f > this->f ? (drifted_f - this->f) : (this->f - drifted_f));
      if (diff >= 512) { diff = 1024 - diff; }
      int v = (speed * diff) >> 10;
      if (v > 64) { v = 64; }
      M5.Speaker.setChannelVolume(1, v);
      M5.Speaker.tone(800 + (rand() & 63), 100, 1, true);
    }
#endif

    int player_add_x_target = rcos;
    int player_add_y_target = rsin;
    //player_add_x_target >>= 3;
    //player_add_y_target >>= 3;

    bool course_out = (((texture_id & 0x1F) == texture_id_t::outside) // 壁抜け防止
                       || (texture_id == flag_1 && this->prev_texture_id == flag_2)); // 逆走防止
    if (course_out)
    {
        this->x -= this->add_x;
        this->y -= this->add_y;
        player_add_x_target = 0;
        player_add_y_target = 0;
        this->add_x = 0;
        this->add_y = 0;
        next_x = this->x;
        next_y = this->y;
        texture_id = sp_map.readPixelValue(this->x >> 16, this->y >> 16);
    }
    this->x += (this->add_x + 3) >> 3; // 自機移動
    this->y += (this->add_y + 3) >> 3; // 自機移動

    if (course_out || (texture_id & 0x1F) > road_1)
    { /// 縁石テクスチャ上に来た時、コースアウト判定のために現在地点の地面の色パレット番号を取得する;
      auto texture = (uint8_t*)sp_texture[texture_id & 0x1F].getBuffer();
      uint32_t tx = (texture_id & texture_id_t::lr_invert) ? ~next_x : next_x;
      uint32_t ty = (texture_id & texture_id_t::ud_invert) ? ~next_y : next_y;
      auto color = (texture_palette_id_t)texture[((tx >> 11) & 0x1F) + ((ty >> 6) & 0x3E0)];
      bool outside = (bool)(color >= texture_palette_id_t::pal_outside_0) != (bool)(texture_id & texture_id_t::io_invert);
      size_t shift = 0;
      if (!course_out && (color & texture_palette_id_t::pal_red_0))
      { // 縁石;
        shift = 1;
      }
      else if (course_out || outside)
      { // コース外;
        shift = 2;
        int right_out = 0;
        int left_out = 0;
        for (int i = 1; i < 4; ++i)
        {
          int right_x = this->x - (rsin * i);
          int right_y = this->y + (rcos * i);
          int right_texture_id = sp_map.readPixelValue(right_x >> 16, right_y >> 16) & 0x1F;
          right_out = right_texture_id == texture_id_t::outside ? 2
                  : right_texture_id == texture_id_t::road_1 ? 0 : 1;

          int left_x = this->x + (rsin * i);
          int left_y = this->y - (rcos * i);
          int left_texture_id = sp_map.readPixelValue(left_x >> 16, left_y >> 16) & 0x1F;
          left_out = left_texture_id == texture_id_t::outside ? 2
                  : left_texture_id == texture_id_t::road_1 ? 0 : 1;
          if (left_out != right_out) { break; }
        }
        if (right_out > left_out)
        {
          player_add_x_target += rsin;
          player_add_y_target -= rcos;
          this->f16 += (1024 - 2) << 16;
        }
        else if (right_out < left_out)
        {
          player_add_x_target -= rsin;
          player_add_y_target += rcos;
          this->f16 += 2 << 16;
        }
      }
      if (shift)
      {
        player_add_x_target >>= shift;
        player_add_y_target >>= shift;
      }
    }
    //*/
#if DRIFT_LEVEL == 0
    this->add_x = player_add_x_target;
    this->add_y = player_add_y_target;
#else
    this->add_x = player_add_x_target + (((this->add_x - player_add_x_target) << DRIFT_LEVEL) + (1 << (DRIFT_LEVEL - 1))) / ((1 << DRIFT_LEVEL) + 1);
    this->add_y = player_add_y_target + (((this->add_y - player_add_y_target) << DRIFT_LEVEL) + (1 << (DRIFT_LEVEL - 1))) / ((1 << DRIFT_LEVEL) + 1);
#endif

    if (this->prev_texture_id == flag_1 && texture_id == flag_2)
    { // 一周判定
      auto laptime = this->msec_lapstart ? msec - this->msec_lapstart : 0;
      if(laptime > 1024)
      {
        ++this->laps;
        this->lap_time = laptime;
        this->msec_lapstart = msec;
      }
    }
    this->prev_texture_id = texture_id;
  }
};

#define CAR_MAX (2)
static Car car[CAR_MAX];

//static int ghostcar_x; // ゴーストカー座標(ベストラップリプレイ);
//static int ghostcar_y;
static uint32_t fpsCounter{}, taskCounter{}, postCounter{}, updateCounter{};
uint32_t fps{}, tfps{}, pfps{}, ufps{};

static uint32_t texture_palette_16x2x2[2][texture_palette_id_t::pal_max];

struct stage_data_t
{
  const size_t width;
  const size_t height;
  const uint8_t* map;
  /// <summary>
  /// binarymapに基づいてspの全ピクセルにテクスチャ番号を割当てる。;
  /// 周囲8ピクセルを含めた3x3の9ピクセルの白黒画像から該当するテクスチャを特定してspに代入していく。;
  /// spはRGB332の8bitスプライトであること;
  /// </summary>
  /// <param name="sp">生成後のマップデータ代入先 (256x256 8bpp)</param>
  /// <param name="binarymap">2値bitmapデータ</param>
  /// <param name="w">binarymapの幅</param>
  /// <param name="h">binarymapの高さ</param>
  void makeCourse(LGFX_Sprite* sp) const
  {
    // 3x3の9ピクセルのビット状態からテクスチャIDに変換するテーブル;
    static constexpr texture_id_t texture_table[512] = {
    texture_id_t::outside,          // 000000000
    texture_id_t::outside,          // 000000001
    texture_id_t::outside,          // 000000010
    texture_id_t::curb_000000011,   // 000000011
    texture_id_t::outside,          // 000000100
    texture_id_t::outside,          // 000000101
    texture_id_t::curb_000000110,   // 000000110
    texture_id_t::curb_000000111,   // 000000111
    texture_id_t::outside,          // 000001000
    texture_id_t::curb_000001001,   // 000001001
    texture_id_t::flag_1,           // 000001010
    texture_id_t::curb_000001011,   // 000001011
    texture_id_t::outside,          // 000001100
    texture_id_t::curb_000001001,   // 000001101
    texture_id_t::curb_000000111,   // 000001110
    texture_id_t::curb_000001111,   // 000001111
    texture_id_t::curb_000010000,   // 000010000
    texture_id_t::flag_1,           // 000010001
    texture_id_t::curb_000010010,   // 000010010
    texture_id_t::curb_000010011,   // 000010011
    texture_id_t::flag_1,           // 000010100
    texture_id_t::flag_1,           // 000010101
    texture_id_t::curb_000010110,   // 000010110
    texture_id_t::curb_000010111,   // 000010111
    texture_id_t::curb_000011000,   // 000011000
    texture_id_t::curb_000011001,   // 000011001
    texture_id_t::curb_000011011,   // 000011010
    texture_id_t::curb_000011011,   // 000011011
    texture_id_t::flag_1,           // 000011100
    texture_id_t::flag_1,           // 000011101
    texture_id_t::curb_000011111,   // 000011110
    texture_id_t::curb_000011111,   // 000011111
    texture_id_t::outside,          // 000100000
    texture_id_t::outside,          // 000100001
    texture_id_t::flag_1,           // 000100010
    texture_id_t::curb_000000111,   // 000100011
    texture_id_t::curb_000100100,   // 000100100
    texture_id_t::curb_000100100,   // 000100101
    texture_id_t::curb_000100110,   // 000100110
    texture_id_t::curb_000100111,   // 000100111
    texture_id_t::outside,          // 000101000
    texture_id_t::curb_000001001,   // 000101001
    texture_id_t::flag_1,           // 000101010
    texture_id_t::flag_1,           // 000101011
    texture_id_t::curb_000100100,   // 000101100
    texture_id_t::curb_000101101,   // 000101101
    texture_id_t::flag_1,           // 000101110
    texture_id_t::curb_000101111,   // 000101111
    texture_id_t::curb_000110000,   // 000110000
    texture_id_t::flag_1,           // 000110001
    texture_id_t::curb_000110110,   // 000110010
    texture_id_t::curb_000110111,   // 000110011
    texture_id_t::curb_000110100,   // 000110100
    texture_id_t::flag_1,           // 000110101
    texture_id_t::curb_000110110,   // 000110110
    texture_id_t::curb_000110111,   // 000110111
    texture_id_t::curb_000111000,   // 000111000
    texture_id_t::curb_000111001,   // 000111001
    texture_id_t::curb_000111111,   // 000111010
    texture_id_t::curb_000111111,   // 000111011
    texture_id_t::curb_000111100,   // 000111100
    texture_id_t::curb_000111111,   // 000111101
    texture_id_t::curb_000111111,   // 000111110
    texture_id_t::curb_000111111,   // 000111111
    texture_id_t::outside,          // 001000000
    texture_id_t::outside,          // 001000001
    texture_id_t::outside,          // 001000010
    texture_id_t::curb_000000011,   // 001000011
    texture_id_t::outside,          // 001000100
    texture_id_t::outside,          // 001000101
    texture_id_t::curb_000000110,   // 001000110
    texture_id_t::curb_000000111,   // 001000111
    texture_id_t::curb_001001000,   // 001001000
    texture_id_t::curb_001001001,   // 001001001
    texture_id_t::curb_001001001,   // 001001010
    texture_id_t::curb_001001011,   // 001001011
    texture_id_t::curb_001001000,   // 001001100
    texture_id_t::curb_001001001,   // 001001101
    texture_id_t::flag_1,           // 001001110
    texture_id_t::curb_001001111,   // 001001111
    texture_id_t::flag_1,           // 001010000
    texture_id_t::flag_1,           // 001010001
    texture_id_t::flag_1,           // 001010010
    texture_id_t::flag_1,           // 001010011
    texture_id_t::flag_1,           // 001010100
    texture_id_t::flag_1,           // 001010101
    texture_id_t::flag_1,           // 001010110
    texture_id_t::flag_1,           // 001010111
    texture_id_t::curb_001011000,   // 001011000
    texture_id_t::curb_001011001,   // 001011001
    texture_id_t::curb_001011011,   // 001011010
    texture_id_t::curb_001011011,   // 001011011
    texture_id_t::flag_1,           // 001011100
    texture_id_t::flag_1,           // 001011101
    texture_id_t::curb_001011111,   // 001011110
    texture_id_t::curb_001011111,   // 001011111
    texture_id_t::outside,          // 001100000
    texture_id_t::outside,          // 001100001
    texture_id_t::flag_1,           // 001100010
    texture_id_t::flag_1,           // 001100011
    texture_id_t::curb_000100100,   // 001100100
    texture_id_t::curb_000100100,   // 001100101
    texture_id_t::curb_000100110,   // 001100110
    texture_id_t::curb_000100111,   // 001100111
    texture_id_t::curb_001001000,   // 001101000
    texture_id_t::curb_001001001,   // 001101001
    texture_id_t::flag_1,           // 001101010
    texture_id_t::flag_1,           // 001101011
    texture_id_t::curb_001101100,   // 001101100
    texture_id_t::curb_001101101,   // 001101101
    texture_id_t::flag_1,           // 001101110
    texture_id_t::curb_001101111,   // 001101111
    texture_id_t::flag_1,           // 001110000
    texture_id_t::flag_1,           // 001110001
    texture_id_t::flag_1,           // 001110010
    texture_id_t::flag_1,           // 001110011
    texture_id_t::flag_1,           // 001110100
    texture_id_t::flag_1,           // 001110101
    texture_id_t::flag_1,           // 001110110
    texture_id_t::curb_000111111,   // 001110111
    texture_id_t::curb_001111000,   // 001111000
    texture_id_t::curb_001111001,   // 001111001
    texture_id_t::curb_001111111,   // 001111010
    texture_id_t::curb_001111111,   // 001111011
    texture_id_t::curb_001111100,   // 001111100
    texture_id_t::curb_001111111,   // 001111101
    texture_id_t::curb_001111111,   // 001111110
    texture_id_t::curb_001111111,   // 001111111
    texture_id_t::outside,          // 010000000
    texture_id_t::outside,          // 010000001
    texture_id_t::outside,          // 010000010
    texture_id_t::curb_000000011,   // 010000011
    texture_id_t::outside,          // 010000100
    texture_id_t::outside,          // 010000101
    texture_id_t::curb_000000110,   // 010000110
    texture_id_t::curb_000000111,   // 010000111
    texture_id_t::flag_1,           // 010001000
    texture_id_t::curb_001001001,   // 010001001
    texture_id_t::flag_1,           // 010001010
    texture_id_t::flag_1,           // 010001011
    texture_id_t::flag_1,           // 010001100
    texture_id_t::flag_1,           // 010001101
    texture_id_t::flag_1,           // 010001110
    texture_id_t::flag_1,           // 010001111
    texture_id_t::curb_010010000,   // 010010000
    texture_id_t::flag_1,           // 010010001
    texture_id_t::curb_010010010,   // 010010010
    texture_id_t::curb_010010011,   // 010010011
    texture_id_t::flag_1,           // 010010100
    texture_id_t::flag_1,           // 010010101
    texture_id_t::curb_010010110,   // 010010110
    texture_id_t::curb_010010111,   // 010010111
    texture_id_t::curb_011011000,   // 010011000
    texture_id_t::curb_011011001,   // 010011001
    texture_id_t::curb_011011011,   // 010011010
    texture_id_t::curb_011011011,   // 010011011
    texture_id_t::flag_1,           // 010011100
    texture_id_t::flag_1,           // 010011101
    texture_id_t::curb_011011111,   // 010011110
    texture_id_t::curb_011011111,   // 010011111
    texture_id_t::flag_1,           // 010100000
    texture_id_t::flag_1,           // 010100001
    texture_id_t::flag_1,           // 010100010
    texture_id_t::flag_1,           // 010100011
    texture_id_t::curb_100100100,   // 010100100
    texture_id_t::flag_1,           // 010100101
    texture_id_t::flag_1,           // 010100110
    texture_id_t::flag_1,           // 010100111
    texture_id_t::flag_1,           // 010101000
    texture_id_t::flag_1,           // 010101001
    texture_id_t::flag_1,           // 010101010
    texture_id_t::flag_1,           // 010101011
    texture_id_t::flag_1,           // 010101100
    texture_id_t::flag_1,           // 010101101
    texture_id_t::flag_1,           // 010101110
    texture_id_t::flag_1,           // 010101111
    texture_id_t::curb_110110000,   // 010110000
    texture_id_t::flag_1,           // 010110001
    texture_id_t::curb_110110110,   // 010110010
    texture_id_t::curb_110110111,   // 010110011
    texture_id_t::curb_110110100,   // 010110100
    texture_id_t::flag_1,           // 010110101
    texture_id_t::curb_110110110,   // 010110110
    texture_id_t::curb_110110111,   // 010110111
    texture_id_t::curb_111111000,   // 010111000
    texture_id_t::curb_111111001,   // 010111001
    texture_id_t::road_1,           // 010111010
    texture_id_t::road_1,           // 010111011
    texture_id_t::curb_111111100,   // 010111100
    texture_id_t::road_1,           // 010111101
    texture_id_t::road_1,           // 010111110
    texture_id_t::road_1,           // 010111111
    texture_id_t::curb_011000000,   // 011000000
    texture_id_t::curb_011000000,   // 011000001
    texture_id_t::curb_011000000,   // 011000010
    texture_id_t::curb_011000011,   // 011000011
    texture_id_t::curb_011000000,   // 011000100
    texture_id_t::curb_011000000,   // 011000101
    texture_id_t::curb_011000110,   // 011000110
    texture_id_t::curb_011000111,   // 011000111
    texture_id_t::curb_011001000,   // 011001000
    texture_id_t::curb_011001001,   // 011001001
    texture_id_t::flag_1,           // 011001010
    texture_id_t::curb_011001011,   // 011001011
    texture_id_t::curb_011001000,   // 011001100
    texture_id_t::curb_011001001,   // 011001101
    texture_id_t::flag_1,           // 011001110
    texture_id_t::curb_011001111,   // 011001111
    texture_id_t::curb_011010000,   // 011010000
    texture_id_t::flag_1,           // 011010001
    texture_id_t::curb_011010010,   // 011010010
    texture_id_t::curb_011011011,   // 011010011
    texture_id_t::flag_1,           // 011010100
    texture_id_t::flag_1,           // 011010101
    texture_id_t::curb_011010110,   // 011010110
    texture_id_t::curb_011011111,   // 011010111
    texture_id_t::curb_011011000,   // 011011000
    texture_id_t::curb_011011001,   // 011011001
    texture_id_t::curb_011011011,   // 011011010
    texture_id_t::curb_011011011,   // 011011011
    texture_id_t::flag_1,           // 011011100
    texture_id_t::curb_011011011,   // 011011101
    texture_id_t::curb_011011111,   // 011011110
    texture_id_t::curb_011011111,   // 011011111
    texture_id_t::curb_111000000,   // 011100000
    texture_id_t::flag_1,           // 011100001
    texture_id_t::flag_1,           // 011100010
    texture_id_t::flag_1,           // 011100011
    texture_id_t::flag_1,           // 011100100
    texture_id_t::flag_1,           // 011100101
    texture_id_t::flag_1,           // 011100110
    texture_id_t::flag_1,           // 011100111
    texture_id_t::flag_1,           // 011101000
    texture_id_t::flag_1,           // 011101001
    texture_id_t::flag_1,           // 011101010
    texture_id_t::flag_1,           // 011101011
    texture_id_t::flag_1,           // 011101100
    texture_id_t::flag_1,           // 011101101
    texture_id_t::flag_1,           // 011101110
    texture_id_t::flag_1,           // 011101111
    texture_id_t::curb_111110000,   // 011110000
    texture_id_t::flag_1,           // 011110001
    texture_id_t::curb_111110110,   // 011110010
    texture_id_t::road_1,           // 011110011
    texture_id_t::curb_111110100,   // 011110100
    texture_id_t::flag_1,           // 011110101
    texture_id_t::curb_111110110,   // 011110110
    texture_id_t::road_1,           // 011110111
    texture_id_t::curb_111111000,   // 011111000
    texture_id_t::curb_111111001,   // 011111001
    texture_id_t::road_1,           // 011111010
    texture_id_t::road_1,           // 011111011
    texture_id_t::curb_111111100,   // 011111100
    texture_id_t::road_1,           // 011111101
    texture_id_t::road_1,           // 011111110
    texture_id_t::road_1,           // 011111111
    texture_id_t::outside,          // 100000000
    texture_id_t::outside,          // 100000001
    texture_id_t::outside,          // 100000010
    texture_id_t::curb_000000011,   // 100000011
    texture_id_t::outside,          // 100000100
    texture_id_t::outside,          // 100000101
    texture_id_t::curb_000000110,   // 100000110
    texture_id_t::curb_000000111,   // 100000111
    texture_id_t::outside,          // 100001000
    texture_id_t::curb_000001001,   // 100001001
    texture_id_t::flag_1,           // 100001010
    texture_id_t::curb_000001011,   // 100001011
    texture_id_t::outside,          // 100001100
    texture_id_t::curb_000001001,   // 100001101
    texture_id_t::flag_1,           // 100001110
    texture_id_t::curb_000001111,   // 100001111
    texture_id_t::flag_1,           // 100010000
    texture_id_t::flag_1,           // 100010001
    texture_id_t::flag_1,           // 100010010
    texture_id_t::flag_1,           // 100010011
    texture_id_t::flag_1,           // 100010100
    texture_id_t::flag_1,           // 100010101
    texture_id_t::flag_1,           // 100010110
    texture_id_t::flag_1,           // 100010111
    texture_id_t::flag_1,           // 100011000
    texture_id_t::flag_1,           // 100011001
    texture_id_t::flag_1,           // 100011010
    texture_id_t::flag_1,           // 100011011
    texture_id_t::flag_1,           // 100011100
    texture_id_t::flag_1,           // 100011101
    texture_id_t::flag_1,           // 100011110
    texture_id_t::curb_000111111,   // 100011111
    texture_id_t::curb_100100000,   // 100100000
    texture_id_t::curb_100100000,   // 100100001
    texture_id_t::curb_100100100,   // 100100010
    texture_id_t::flag_1,           // 100100011
    texture_id_t::curb_100100100,   // 100100100
    texture_id_t::curb_100100100,   // 100100101
    texture_id_t::curb_100100110,   // 100100110
    texture_id_t::curb_100100111,   // 100100111
    texture_id_t::curb_100100000,   // 100101000
    texture_id_t::curb_100101001,   // 100101001
    texture_id_t::flag_1,           // 100101010
    texture_id_t::flag_1,           // 100101011
    texture_id_t::curb_100100100,   // 100101100
    texture_id_t::curb_100101101,   // 100101101
    texture_id_t::flag_1,           // 100101110
    texture_id_t::curb_100101111,   // 100101111
    texture_id_t::curb_100110000,   // 100110000
    texture_id_t::flag_1,           // 100110001
    texture_id_t::curb_100110110,   // 100110010
    texture_id_t::curb_100110111,   // 100110011
    texture_id_t::curb_100110100,   // 100110100
    texture_id_t::flag_1,           // 100110101
    texture_id_t::curb_100110110,   // 100110110
    texture_id_t::curb_100110111,   // 100110111
    texture_id_t::curb_100111000,   // 100111000
    texture_id_t::curb_100111001,   // 100111001
    texture_id_t::curb_100111111,   // 100111010
    texture_id_t::curb_100111111,   // 100111011
    texture_id_t::curb_100111100,   // 100111100
    texture_id_t::curb_100111111,   // 100111101
    texture_id_t::curb_100111111,   // 100111110
    texture_id_t::curb_100111111,   // 100111111
    texture_id_t::outside,          // 101000000
    texture_id_t::outside,          // 101000001
    texture_id_t::outside,          // 101000010
    texture_id_t::curb_000000011,   // 101000011
    texture_id_t::outside,          // 101000100
    texture_id_t::outside,          // 101000101
    texture_id_t::curb_000000110,   // 101000110
    texture_id_t::curb_000000111,   // 101000111
    texture_id_t::curb_001001000,   // 101001000
    texture_id_t::curb_001001001,   // 101001001
    texture_id_t::flag_1,           // 101001010
    texture_id_t::curb_001001011,   // 101001011
    texture_id_t::curb_001001000,   // 101001100
    texture_id_t::curb_001001001,   // 101001101
    texture_id_t::flag_1,           // 101001110
    texture_id_t::curb_001001111,   // 101001111
    texture_id_t::flag_1,           // 101010000
    texture_id_t::flag_1,           // 101010001
    texture_id_t::flag_1,           // 101010010
    texture_id_t::flag_1,           // 101010011
    texture_id_t::flag_1,           // 101010100
    texture_id_t::flag_1,           // 101010101
    texture_id_t::flag_1,           // 101010110
    texture_id_t::flag_1,           // 101010111
    texture_id_t::flag_1,           // 101011000
    texture_id_t::flag_1,           // 101011001
    texture_id_t::flag_1,           // 101011010
    texture_id_t::curb_011011011,   // 101011011
    texture_id_t::flag_1,           // 101011100
    texture_id_t::flag_1,           // 101011101
    texture_id_t::flag_1,           // 101011110
    texture_id_t::flag_1,           // 101011111
    texture_id_t::curb_100100000,   // 101100000
    texture_id_t::curb_100100000,   // 101100001
    texture_id_t::flag_1,           // 101100010
    texture_id_t::flag_1,           // 101100011
    texture_id_t::curb_100100100,   // 101100100
    texture_id_t::curb_100100100,   // 101100101
    texture_id_t::curb_100100110,   // 101100110
    texture_id_t::curb_100100111,   // 101100111
    texture_id_t::curb_101101000,   // 101101000
    texture_id_t::curb_101101001,   // 101101001
    texture_id_t::flag_1,           // 101101010
    texture_id_t::flag_1,           // 101101011
    texture_id_t::curb_101101100,   // 101101100
    texture_id_t::curb_101101101,   // 101101101
    texture_id_t::flag_1,           // 101101110
    texture_id_t::curb_101101111,   // 101101111
    texture_id_t::flag_1,           // 101110000
    texture_id_t::flag_1,           // 101110001
    texture_id_t::flag_1,           // 101110010
    texture_id_t::flag_1,           // 101110011
    texture_id_t::flag_1,           // 101110100
    texture_id_t::flag_1,           // 101110101
    texture_id_t::curb_110110110,   // 101110110
    texture_id_t::flag_1,           // 101110111
    texture_id_t::curb_111111000,   // 101111000
    texture_id_t::curb_111111001,   // 101111001
    texture_id_t::road_1,           // 101111010
    texture_id_t::road_1,           // 101111011
    texture_id_t::curb_111111100,   // 101111100
    texture_id_t::road_1,           // 101111101
    texture_id_t::road_1,           // 101111110
    texture_id_t::road_1,           // 101111111
    texture_id_t::curb_110000000,   // 110000000
    texture_id_t::curb_110000000,   // 110000001
    texture_id_t::curb_110000000,   // 110000010
    texture_id_t::curb_110000011,   // 110000011
    texture_id_t::curb_110000000,   // 110000100
    texture_id_t::curb_110000000,   // 110000101
    texture_id_t::curb_110000110,   // 110000110
    texture_id_t::curb_110000111,   // 110000111
    texture_id_t::curb_111000000,   // 110001000
    texture_id_t::flag_1,           // 110001001
    texture_id_t::flag_1,           // 110001010
    texture_id_t::flag_1,           // 110001011
    texture_id_t::flag_1,           // 110001100
    texture_id_t::flag_1,           // 110001101
    texture_id_t::flag_1,           // 110001110
    texture_id_t::flag_1,           // 110001111
    texture_id_t::curb_110010000,   // 110010000
    texture_id_t::flag_1,           // 110010001
    texture_id_t::curb_110010010,   // 110010010
    texture_id_t::curb_110010011,   // 110010011
    texture_id_t::flag_1,           // 110010100
    texture_id_t::flag_1,           // 110010101
    texture_id_t::curb_110110110,   // 110010110
    texture_id_t::curb_110110111,   // 110010111
    texture_id_t::curb_111011000,   // 110011000
    texture_id_t::curb_111011001,   // 110011001
    texture_id_t::curb_111011011,   // 110011010
    texture_id_t::curb_111011011,   // 110011011
    texture_id_t::flag_1,           // 110011100
    texture_id_t::flag_1,           // 110011101
    texture_id_t::road_1,           // 110011110
    texture_id_t::road_1,           // 110011111
    texture_id_t::curb_110100000,   // 110100000
    texture_id_t::curb_110100000,   // 110100001
    texture_id_t::flag_1,           // 110100010
    texture_id_t::flag_1,           // 110100011
    texture_id_t::curb_110100100,   // 110100100
    texture_id_t::curb_110100100,   // 110100101
    texture_id_t::curb_110100110,   // 110100110
    texture_id_t::curb_110100111,   // 110100111
    texture_id_t::flag_1,           // 110101000
    texture_id_t::flag_1,           // 110101001
    texture_id_t::flag_1,           // 110101010
    texture_id_t::flag_1,           // 110101011
    texture_id_t::flag_1,           // 110101100
    texture_id_t::flag_1,           // 110101101
    texture_id_t::flag_1,           // 110101110
    texture_id_t::flag_1,           // 110101111
    texture_id_t::curb_110110000,   // 110110000
    texture_id_t::flag_1,           // 110110001
    texture_id_t::curb_110110110,   // 110110010
    texture_id_t::curb_110110111,   // 110110011
    texture_id_t::curb_110110100,   // 110110100
    texture_id_t::curb_110110110,   // 110110101
    texture_id_t::curb_110110110,   // 110110110
    texture_id_t::curb_110110111,   // 110110111
    texture_id_t::curb_111111000,   // 110111000
    texture_id_t::curb_111111001,   // 110111001
    texture_id_t::road_1,           // 110111010
    texture_id_t::road_1,           // 110111011
    texture_id_t::curb_111111100,   // 110111100
    texture_id_t::road_1,           // 110111101
    texture_id_t::road_1,           // 110111110
    texture_id_t::road_1,           // 110111111
    texture_id_t::curb_111000000,   // 111000000
    texture_id_t::curb_111000000,   // 111000001
    texture_id_t::curb_111000000,   // 111000010
    texture_id_t::curb_111000011,   // 111000011
    texture_id_t::curb_111000000,   // 111000100
    texture_id_t::curb_111000000,   // 111000101
    texture_id_t::curb_111000110,   // 111000110
    texture_id_t::curb_111000111,   // 111000111
    texture_id_t::curb_111001000,   // 111001000
    texture_id_t::curb_111001001,   // 111001001
    texture_id_t::flag_1,           // 111001010
    texture_id_t::curb_111001011,   // 111001011
    texture_id_t::curb_111001000,   // 111001100
    texture_id_t::curb_111001001,   // 111001101
    texture_id_t::flag_1,           // 111001110
    texture_id_t::curb_111001111,   // 111001111
    texture_id_t::curb_111010000,   // 111010000
    texture_id_t::flag_1,           // 111010001
    texture_id_t::curb_111010010,   // 111010010
    texture_id_t::curb_111011011,   // 111010011
    texture_id_t::flag_1,           // 111010100
    texture_id_t::flag_1,           // 111010101
    texture_id_t::curb_111110110,   // 111010110
    texture_id_t::road_1,           // 111010111
    texture_id_t::curb_111011000,   // 111011000
    texture_id_t::curb_111011001,   // 111011001
    texture_id_t::curb_111011011,   // 111011010
    texture_id_t::curb_111011011,   // 111011011
    texture_id_t::curb_111111000,   // 111011100
    texture_id_t::flag_1,           // 111011101
    texture_id_t::road_1,           // 111011110
    texture_id_t::road_1,           // 111011111
    texture_id_t::curb_111100000,   // 111100000
    texture_id_t::curb_111100000,   // 111100001
    texture_id_t::flag_1,           // 111100010
    texture_id_t::flag_1,           // 111100011
    texture_id_t::curb_111100100,   // 111100100
    texture_id_t::curb_111100100,   // 111100101
    texture_id_t::curb_111100110,   // 111100110
    texture_id_t::curb_111100111,   // 111100111
    texture_id_t::curb_111101000,   // 111101000
    texture_id_t::curb_111101001,   // 111101001
    texture_id_t::flag_1,           // 111101010
    texture_id_t::flag_1,           // 111101011
    texture_id_t::curb_111101100,   // 111101100
    texture_id_t::curb_111101101,   // 111101101
    texture_id_t::flag_1,           // 111101110
    texture_id_t::curb_111101111,   // 111101111
    texture_id_t::curb_111110000,   // 111110000
    texture_id_t::curb_111111000,   // 111110001
    texture_id_t::curb_111110110,   // 111110010
    texture_id_t::road_1,           // 111110011
    texture_id_t::curb_111110100,   // 111110100
    texture_id_t::flag_1,           // 111110101
    texture_id_t::curb_111110110,   // 111110110
    texture_id_t::road_1,           // 111110111
    texture_id_t::curb_111111000,   // 111111000
    texture_id_t::curb_111111001,   // 111111001
    texture_id_t::road_1,           // 111111010
    texture_id_t::road_1,           // 111111011
    texture_id_t::curb_111111100,   // 111111100
    texture_id_t::road_1,           // 111111101
    texture_id_t::road_1,           // 111111110
    texture_id_t::road_1,           // 111111111
    };

    int32_t flag_left = INT32_MAX;
    int32_t flag_right = INT32_MIN;
    int32_t flag_top = INT32_MAX;
    int32_t flag_bottom = INT32_MIN;

    size_t binmap_len = width * height;
    sp->fillScreen((uint32_t)texture_id_t::outside);
    int xe = std::min<int>(width, sp->width());
    int ye = std::min<int>(height, sp->height());
    int yoffset = (sp->height() - height) >> 1;

    for (int x = 0; x < xe; ++x)
    {
      // 周囲3x3のビット状態 (合計9bitの2値データ。ビットの順序は 左上 上 右上 左 中心 右 左下 下 右下 となる);
      uint_fast16_t road_bits = 0;
      size_t read_idx = (size_t)x - 2u;

      // 縦ループ開始前にまず上端の 3bitぶんを取得しておく
      for (size_t i = 0; i < 3; ++i)
      {
        ++read_idx;
        if ((read_idx < binmap_len) && (map[read_idx >> 3] & (0x80 >> (read_idx & 7))))
        {
          road_bits += 0b100 >> i;
        }
      }

      for (int y = 0; y < ye; ++y)
      {
        // 走査を上から下に進めるため、周囲3x3のビットデータから上位3bit分の古いデータを捨てて下位3bitを空ける;
        road_bits = (road_bits << 3) & 0x1FF;
        size_t read_idx = ((y + 1) * width) + x - 2;
        size_t mask = 0b100;
        do
        { // 下位3bitぶんのデータを取得する;
          ++read_idx;
          if ((read_idx < binmap_len) && (map[read_idx >> 3] & (0x80 >> (read_idx & 7))))
          {
            road_bits += mask;
          }
        } while (mask >>= 1);

        texture_id_t texture_id = texture_table[road_bits];
        if (texture_id == texture_id_t::road_1)
        { // 路上のテクスチャにランダム感を出すため 上下反転・左右反転フラグをランダムで付与する;
          texture_id = (texture_id_t)(texture_id_t::road_1 + ((rand() & 3) << 6));
        }

        sp->drawPixel(x, y + yoffset, texture_id);

        // フラッグの場所を更新;
        if (texture_id == texture_id_t::flag_1 && (x > 1 || y > 1))
        {
          flag_top = std::min(y + yoffset, flag_top);
          flag_left = std::min(x, flag_left);
          flag_right = std::max(x, flag_right);
          flag_bottom = std::max(y + yoffset, flag_bottom);
        }
      }
    }

    if (flag_left > flag_right || flag_top > flag_bottom)
    { // TODO : マップ内にフラッグが見つからない場合の処理
      return;
    }

    // 検出されたフラッグ範囲を矩形で塗潰す
    int flag_w = flag_right - flag_left + 1;
    int flag_h = flag_bottom - flag_top + 1;
    sp->fillRect(flag_left, flag_top, flag_w, flag_h, texture_id_t::flag_1);

#if 0
    player_x = (flag_left + flag_right + 1) << 15;
    player_y = (flag_top + flag_bottom + 1) << 15;
#else
    for(auto& c: car)
    {
      c.x = (flag_left + flag_right + 1) << 15;
      c.y = (flag_top + flag_bottom + 1) << 15;
    }
#endif
    
    int direction = -1;

    // マップ左上3x3の9ピクセルをチェック (進行方向マーカー確認);
    {
      size_t road_bits = 0;
      for (size_t i = 0; i < 9; ++i)
      {
        size_t idx = (i % 3) + (i / 3) * width;
        if (map[idx >> 3] & (0x80 >> (idx & 7)))
        {
          road_bits += 0x100u >> i;
        }
      }
      switch (road_bits)
      {
      case 0b000011000: case 0b000001000: direction = 0; break; // 右
      case 0b000011001: case 0b000001001: direction = 1; break; // 右右下
      case 0b000010001: case 0b000000001: direction = 2; break; // 右下
      case 0b000010011: case 0b000000011: direction = 3; break; // 右下下
      case 0b000010010: case 0b000000010: direction = 4; break; // 下
      case 0b000010110: case 0b000000110: direction = 5; break; // 左下下
      case 0b000010100: case 0b000000100: direction = 6; break; // 左下
      case 0b000110100: case 0b000100100: direction = 7; break; // 左左下
      case 0b000110000: case 0b000100000: direction = 8; break; // 左
      case 0b100110000: case 0b100100000: direction = 9; break; // 左左上
      case 0b100010000: case 0b100000000: direction = 10; break; // 左上
      case 0b110010000: case 0b110000000: direction = 11; break; // 左上上
      case 0b010010000: case 0b010000000: direction = 12; break; // 上
      case 0b011010000: case 0b011000000: direction = 13; break; // 右上上
      case 0b001010000: case 0b001000000: direction = 14; break; // 右上
      case 0b001011000: case 0b001001000: direction = 15; break; // 右右上
      default:
        break;
      }
      if (direction == -1)
      { // マップ左上隅の進行方向マーカが見つからなかった場合はフラッグ中心から道のある方向を探索する;
        int flag_x = ((flag_left + flag_right + 1) >> 1);
        int flag_y = ((flag_top + flag_bottom + 1) >> 1);
        for (int i = 1; i < 16; ++i)
        {
          if ((sp->readPixelValue(flag_x + i, flag_y) & 0x1F) == texture_id_t::road_1) { direction = 0; break; }
          if ((sp->readPixelValue(flag_x, flag_y + i) & 0x1F) == texture_id_t::road_1) { direction = 4; break; }
          if ((sp->readPixelValue(flag_x - i, flag_y) & 0x1F) == texture_id_t::road_1) { direction = 8; break; }
          if ((sp->readPixelValue(flag_x, flag_y - i) & 0x1F) == texture_id_t::road_1) { direction = 12; break; }
        }
        if (direction < 0) { direction = 0; }
      }
      else
      { // 進行方向マーカ部分を消去
        sp->fillRect(0, yoffset, 4, 4, (uint8_t)(texture_id_t::outside));
      }
    }
    // ゲーム開始時の進行方向を設定する;
#if 0
    player_f = direction * 64;
    player_x -= icos(player_f) * 6; // ゲーム開始地点をフラッグ後方にセットする
    player_y -= isin(player_f) * 6;
#else
    for(auto& c : car)
    {
      c.f = direction * 64;
      c.x -= icos(c.f) * 6;
      c.y -= isin(c.f) * 6;
    }
#endif    
    // 逆走防止用にフラッグ出口側をflag_2に変更する;
    {
      switch (direction)
      { // 進行方向が斜め45度の場合はフラッグの縦横比率で判断する;
      case 2: direction = (flag_w < flag_h) ? 0 : 4; break;
      case 6: direction = (flag_w < flag_h) ? 8 : 4; break;
      case 10: direction = (flag_w < flag_h) ? 8 : 12; break;
      case 14: direction = (flag_w < flag_h) ? 0 : 12; break;
      default: break;
      }
      switch (((direction + 1) >> 2) & 3)
      {
      case 0: flag_left = flag_right; break;
      case 1: flag_top = flag_bottom; break;
      case 2: flag_right = flag_left; break;
      case 3: flag_bottom = flag_top; break;
      default: break;
      }
      sp->fillRect(flag_left, flag_top, flag_right - flag_left + 1, flag_bottom - flag_top + 1, texture_id_t::flag_2);
    }
  }
};

extern const uint8_t map_ti[8192]; // 256 x 256
extern const uint8_t map_tsukuba[5664]; // 256 x 177
extern const uint8_t map_fuji_short[3296];  // 256 x 103
extern const uint8_t map_nakayama[4896]; // 256 x 153

static constexpr const stage_data_t stage_data_list[] =
{ { 256, 177, map_tsukuba}
, { 256, 256, map_ti }
, { 256, 103, map_fuji_short }
, { 256, 153, map_nakayama }
};
static constexpr const size_t stage_data_max = sizeof(stage_data_list) / sizeof(stage_data_list[0]);

void comm_callback(const Notify notify, const void* arg)
{
    MACAddress addr;
    switch(notify)
    {
    case Notify::ConnectionLost:
        addr = *(const MACAddress*)arg;
        M5_LOGE("CONNECTION LOST\n%s", addr.toString().c_str());
        game_mode = game_mode_t::nothing;
        break;
    case Notify::Shookhands:
        target = *(const MACAddress*)arg;
        M5_LOGI("Complete handshake with %s", target.toString().c_str());
        comm.unregisterPeer(BROADCAST);
    default: break;
    }
}

void gameTask(void*)
{
  uint32_t input_count = 0;
  uint32_t msec_start = lgfx::millis();
  //uint32_t prev_ghost_framecount = ~0u;

  M5.Speaker.setVolume(255);
  M5.Speaker.setChannelVolume(0, SOUND_VOLUME);

  for (;;)
  {
    ++taskCounter;
    comm.update();
    uint32_t msec = lgfx::millis() - msec_start;
    if ((input_count << 3) > msec)
    {
      //M5_LOGW("delay:%u", (input_count << 3) - msec);
      lgfx::delay((input_count << 3) - msec);
      msec = lgfx::millis() - msec_start;
    }
    else
    {
        //lgfx::delay(1);
    }
    ++input_count;

    M5.update();

    int lr = 0;
    lr = funcInputLeftRight();
    player_steering_angle = std::max<int>(-32768, std::min<int>(32768, lr));

    // Choose connection
    if (game_mode == game_mode_t::choose_connection)
    {
      // Handshaked to other device?
      if(comm.isSecondary())
      {
        game_mode = game_mode_t::waiting;
        M5_LOGI("Handshake : Im secondary");
        continue;
      }
      //  Declare primary device.
      if(M5.BtnB.wasClicked())
      {
        input_pressed = 0;
        if(comm.broadcastHandshake())
        {
            M5_LOGI("broadcast handshake");
            game_mode = game_mode_t::stage_select;
        }
        else
        {
          M5_LOGE("Failed to broadcast");
        }
      }
      continue;
    }

    // waiting (Secondary)
    if( game_mode == game_mode_t::waiting)
    {
      if(startTRX.time())
      {
        startTime = startTRX.time();
        countDown = (int)(startTime - std::time(nullptr));
        stage_index = startTRX.stage();
        M5_LOGI("receive synctime and stage: %ld / %d", startTime, stage_index);
        deviceId = 1;
        
        stage_data_list[stage_index].makeCourse(&sp_map);
        //input_count += 128;
        for(auto& c : car) { c.msec_lapstart = 0; c.f16 = c.f << 16; }
        // do
        // {
        //   player_steering_angle = funcInputLeftRight();
        //   lgfx::delay(8);
        // } while ((input_count << 3) > (lgfx::millis() - msec_start));

        // Disable force ACK (By posting to each other, they also serve as ACK)
        auto cfg = comm.config();
        cfg.cumulativeAckTimeout = 0;
        cfg.maxCumAck = 0;
        comm.config(cfg);

        game_mode = game_mode_t::racing;
      }
      continue;
    }
    
    // Select stage (Primary)
    if (game_mode == game_mode_t::stage_select)
    {
      bool enter = funcInputEnter();

      stage_select_angle = (stage_select_angle < 360.0) ? stage_select_angle + 0.5f : 0;
      if ((stage_index_x256 != stage_index_x256_target))
      {
        //        stage_index_x256 = ((stage_index_x256 + (stage_index_x256 < stage_index_x256_target ? 1 : -1)) * 15 + stage_index_x256_target) >> 4;
        stage_index_x256 = stage_index_x256_target;
      }
      else
      {
        if (enter)
        {
          startTime = std::time(nullptr) + 5; //start after 5 sec.
          M5_LOGI("post stage:%u time:%lu", stage_index, startTime);
          startTRX.post(stage_index, startTime);

          deviceId = 0;
          countDown = (int)(startTime - std::time(nullptr));

          stage_data_list[stage_index].makeCourse(&sp_map);
          //input_count += 128;
          for(auto& c : car) { c.msec_lapstart = 0; c.f16 = c.f << 16; }

          // Disable force ACK (By posting to each other, they also serve as ACK)
          auto cfg = comm.config();
          cfg.cumulativeAckTimeout = 0;
          cfg.maxCumAck = 0;
          comm.config(cfg);

          game_mode = game_mode_t::racing;
          // do
          // {
          //   player_steering_angle = funcInputLeftRight();
          //   lgfx::delay(8);
          // } while ((input_count << 3) > (lgfx::millis() - msec_start));
          continue;
        }

        int32_t add = ((stage_index << 8) - stage_index_x256_target);

        int32_t padd = (player_steering_angle + 31) >> 5;
        padd = (abs(padd) > 16) ? (padd + (padd < 0 ? 16 : -16)) : 0;
        if (padd)
        {
          if (!add || (add < 0) != (padd < 0))
          {
            add += padd;
          }
          else add = padd;
        }
        if (add >= 0)
        {
          add += 31;
        }
        add >>= 5;

        stage_index_x256_target += add;

        int32_t new_index = (stage_index_x256_target + 128) >> 8;
        if (stage_index != new_index)
        {
          stage_index = new_index; //  < 0 ? stage_data_max - 1 : new_index >= stage_data_max ? 0 : new_index;
          if (stage_index_x256_target < 0)
          {
            stage_index = stage_data_max - 1;
            stage_index_x256_target += stage_data_max << 8;
            stage_index_x256 += stage_data_max << 8;
          }
          else if (stage_index >= stage_data_max)
          {
            stage_index = 0;
            stage_index_x256_target -= stage_data_max << 8;
          }
        }
      }
      continue;
    }
    
    // --- game_mode_t::racing
    // Waiting for start synchronization
    if(startTime)
    {
      countDown = (int)(startTime - std::time(nullptr));
      if(countDown == 0)
      {
        M5_LOGW("StartGame : %u", esp_get_free_heap_size());
        for(auto& c : car) { c.msec_lapstart = msec; }
        startTime = 0;
        if(!inputTRX.post(player_steering_angle)) { M5_LOGE("Failed to post"); }
      }
      continue;
    }

    uint32_t self_sec{};
    for(uint_fast8_t i=0; i<2; ++i)
    {
      uint32_t lap_msec = msec - car[i].msec_lapstart;
      if(i == deviceId) { self_sec = lap_msec/1000; }
      if (lap_msec >= 5000)
      {
        lap_msec /= 10;
        uint32_t lap_sec = lap_msec / 100;
        uint32_t lap_min = lap_sec / 60;
        lap_msec -= lap_sec * 100;
        lap_sec -= lap_min * 60;
#if 1        
        snprintf(lap_str[i], sizeof(lap_str[i]), "%cL:%2d %02d:%02d:%02d",
                 i == deviceId ? '*' : ' ',car[i].laps + 1, lap_min, lap_sec, lap_msec);
#endif        
      }
    }

    // Communication
    if(inputTRX.with_lock([&msec]()
    {
      if(!inputTRX.available()) { return false; }
      // Update the car status  with the received and reached data.
      do
      {
        auto sa = inputTRX.pop(); // Gets the mine and target pair.
        car[deviceId    ].update(sa.first,  msec, deviceId == 0);
        car[deviceId ^ 1].update(sa.second, msec, deviceId == 1);
        ++updateCounter;
      } while(inputTRX.available());
      return true;
    }))
    {
      if(inputTRX.post(player_steering_angle)) { ++postCounter; }
      else { M5_LOGE("Failed to post"); } 
    }

  // debug disp
    static uint32_t prev_sec = 0;
    if (prev_sec != self_sec)
    {
        prev_sec = self_sec;
        fps = fpsCounter;
        tfps = taskCounter;
        pfps = postCounter;
        ufps = updateCounter;
        fpsCounter = taskCounter = postCounter = updateCounter = 0;
    }
    // for debug
#if 0
    for(uint_fast8_t i=0; i<2; ++i)
    {
        snprintf(lap_str[i], sizeof(lap_str[i]), "%c(%d,%d)%2u %2u %2u %2u",
                 deviceId == i ? '*' : ' ',
                 car[i].x >> 16, car[i].y >> 16,
                 tfps, pfps, ufps, fps);
    }
#endif
  }//for(;;)
}

  
void setupPingPongBuffer(LGFX_Device* gfx)
{
  uint32_t div = 5; // original 3.
  for (size_t i = 0; i < 2; ++i)
  {
    sprites[i].deleteSprite();
    sprites[i].setColorDepth(16);
    sprites[i].setPsram(false);
    sprites[i].setTextSize(gfx->height() > 200 ? 2 : 1);
  }
  for (;;)
  {
    sprite_height = (gfx->height() + div - 1) / div;
    M5_LOGI("strip:%d", sprite_height);
    bool fail = false;
    for (std::uint32_t i = 0; !fail && i < 2; ++i)
    {
      fail = !sprites[i].createSprite(gfx->width(), sprite_height);
    }
    if (!fail) break;
    for (std::uint32_t i = 0; i < 2; ++i)
    {
      sprites[i].deleteSprite();
    }
    ++div;
  }
}

static void setupTexture(const uint8_t* const tex, size_t texlen, LGFX_Sprite* sp_tx, bool invert = false, bool xy_swap = false)
{
  for (size_t y = 0; y < TEXTURE_SIZE; ++y)
  {
    for (size_t x = 0; x < TEXTURE_SIZE; ++x)
    {
      size_t idx = x + y * TEXTURE_SIZE;
      uint8_t pix = (idx < texlen) ? tex[idx] : 0;
      switch (pix)
      {
      case texture_palette_id_t::pal_inside_0:
      case texture_palette_id_t::pal_outside_0:
        if (invert)
        {
          pix ^= texture_palette_id_t::pal_outside_0;
        }
        break;
      case texture_palette_id_t::pal_white_0:
        if (xy_swap)
        {
          pix = texture_palette_id_t::pal_red_0;
        }
        break;
      case texture_palette_id_t::pal_red_0:
        if (xy_swap)
        {
          pix = texture_palette_id_t::pal_white_0;
        }
        break;
      }

      // テクスチャにランダムなノイズを追加する
      if ((rand() & 7) == 0) { pix |= rand() & 3; }

      size_t tx = xy_swap ? y : x;
      size_t ty = xy_swap ? x : y;
      sp_tx->drawPixel(tx, ty, pix);
    }
  }
}

void setup(void)
{
  M5_LOGI("heap: setup %u",esp_get_free_heap_size());
  // Disable Bluetooth for increase heap (May not make sense in some environments)
  {
    esp_bluedroid_disable();
    esp_bluedroid_deinit();
    esp_bt_controller_disable();
    esp_bt_controller_deinit();
    esp_bt_mem_release(ESP_BT_MODE_BTDM);
    M5_LOGI("heap:after disable Bluetooth %u",esp_get_free_heap_size());
  }

  M5.begin();
  {
    auto cfg = M5.Speaker.config();
    cfg.sample_rate = 96000;
    M5.Speaker.config(cfg);
  }

  if (display.width() < display.height())
  {
    display.setRotation(display.getRotation() ^ 3);
  }
  display.setColorDepth(16);
  lcd_width = display.width();
  lcd_height = display.height();

  M5_LOGI("heap:after M5.begin %u",esp_get_free_heap_size());
  configTime(); // NTP 
  M5_LOGI("heap:after configTime %u",esp_get_free_heap_size());

  WiFi.mode(WIFI_STA);
  WiFi.disconnect();

  // 最初にマップ用の256x256のメモリを確保しておく;
  sp_map.setColorDepth(8);
  sp_map.createSprite(256, 256);

  // 次に描画DMA転送用のピンポンバッファを確保しておく;
  setupPingPongBuffer(&display);
  M5_LOGI("heap:after allocate pingpong %u",esp_get_free_heap_size());
  sp_map.createPalette();
  for (int i = 0; i < 256; ++i)
  {
    sp_map.setPaletteColor(i, TFT_LIGHTGRAY);
  }
  sp_map.setPaletteColor(texture_id_t::outside, 0u);
  sp_map.setPaletteColor(texture_id_t::road_1, lgfx::color888(32, 32, 32));
  sp_map.setPaletteColor(texture_id_t::road_2, lgfx::color888(32, 32, 32));
  sp_map.setPaletteColor(texture_id_t::road_3, lgfx::color888(32, 32, 32));
  sp_map.setPaletteColor(texture_id_t::road_4, lgfx::color888(32, 32, 32));
  sp_map.setPaletteColor(texture_id_t::flag_1, TFT_LIGHTGRAY);
  sp_map.setPaletteColor(texture_id_t::flag_2, TFT_LIGHTGRAY);

  sp_background.setColorDepth(2);
  sp_background.createSprite(lcd_height << 2, lcd_height >> 3);
  sp_background.setPaletteColor(0, lgfx::color888(32, 96, 255)); // 空;
  sp_background.setPaletteColor(1, lgfx::color888(72, 202, 76)); // 山;
  sp_background.setPaletteColor(2, lgfx::color888(48, 144, 48)); // 山;
  sp_background.fillScreen(0);
  for (int i = 0; i < 40; ++i)
  {
    int x = rand() % sp_background.width();
    int y = (rand() % sp_background.height()) >> 1;
    int r = (rand() % sp_background.height()) + sp_background.height();
    sp_background.fillEllipseArc(x + (sp_background.width() >> 1), y, r, 0, r >> 3, 0, 180, 360, 3);
    sp_background.fillEllipseArc(x - (sp_background.width() >> 1), y, r, 0, r >> 3, 0, 180, 360, 3);
  }
  for (int y = sp_background.height() >> 2; y < sp_background.height() >> 1; ++y)
  {
    for (int x = y & 1; x < sp_background.width(); x += 2)
    {
      sp_background.drawPixel(x, y, 0);
    }
  }
  for (int i = 0; i < 128; ++i)
  {
    int x = rand() % sp_background.width();
    int y = ((rand() % sp_background.height()) + (sp_background.height() >> 1)) >> 1;
    sp_background.setColor(1 + ((i >> 6) & 1));
    sp_background.fillTriangle(x + (sp_background.width() >> 1), sp_background.height() - y
      , x + (sp_background.width() >> 1) + (y << 1), sp_background.height()
      , x + (sp_background.width() >> 1) - (y << 1), sp_background.height()
    );
    sp_background.fillTriangle(x - (sp_background.width() >> 1), sp_background.height() - y
      , x - (sp_background.width() >> 1) + (y << 1), sp_background.height()
      , x - (sp_background.width() >> 1) - (y << 1), sp_background.height()
    );
  }

#if 0
  sp_steering.setColorDepth(2);
  sp_steering.createSprite((lcd_height >> 1) + 1, lcd_height + 1);
  int half_height = sp_steering.height() >> 1;
  sp_steering.setPivot(0, half_height);
  sp_steering.setPaletteColor(2, 0x222222u);
  sp_steering.setPaletteColor(3, TFT_YELLOW);
  sp_steering.fillRect(0, (half_height)-(sp_steering.height() >> 4), sp_steering.width() - 4, (sp_steering.height() >> 4) * 2 + 1, 1);
  sp_steering.fillRect(0, half_height, (sp_steering.height() >> 4) + 1, (half_height)-3, 1);
  sp_steering.fillArc(0, half_height, half_height, sp_steering.height() * 27 >> 6, 0, 360, 2);
  sp_steering.fillArc(0, half_height, sp_steering.height() >> 2, sp_steering.height() * 27 >> 6, 75, 105, 2);
  sp_steering.fillArc(0, half_height, sp_steering.height() >> 2, sp_steering.height() * 27 >> 6, 165, 195, 2);
  sp_steering.fillArc(0, half_height, sp_steering.height() >> 2, sp_steering.height() * 27 >> 6, 345, 15, 2);
  sp_steering.fillArc(0, half_height, half_height, sp_steering.height() * 27 >> 6, 269, 271, 3);
  sp_steering.fillCircle(0, half_height, sp_steering.height() >> 3, 2);
  sp_steering.fillArc(0, half_height, sp_steering.height() >> 4, (sp_steering.height() >> 4) + 1, 0, 360, 1);
  sp_steering.fillArc(sp_steering.height() >> 1, 0, sp_steering.height() * 5 >> 4, sp_steering.height() * 4 >> 4, 112, 158, 2);

  sp_panel.setColorDepth(4);
  sp_panel.createSprite(((lcd_height * 23) >> 5), (lcd_height * 8) >> 5);
  sp_panel.fillCircle((lcd_height * 24) >> 7, (lcd_height * 6) >> 5, (lcd_height * 6) >> 5, 0x01);
  sp_panel.fillCircle((lcd_height * 68) >> 7, (lcd_height * 6) >> 5, (lcd_height * 6) >> 5, 0x01);
  sp_panel.fillRect((lcd_height * 24) >> 7, ((lcd_height * 6) >> 5) - ((lcd_height * 6) >> 5), (lcd_height * 44) >> 7, sp_panel.height(), 0x01);

  sp_panel.fillCircle((lcd_height * 24) >> 7, (lcd_height * 6) >> 5, (lcd_height * 5) >> 5, 0x0Fu);
  sp_panel.fillCircle((lcd_height * 24) >> 7, (lcd_height * 6) >> 5, (lcd_height * 2) >> 5, 0x08u);
  sp_panel.drawCircle((lcd_height * 24) >> 7, (lcd_height * 6) >> 5, (lcd_height * 2) >> 5, 0x0Cu);

  sp_panel.fillCircle((lcd_height * 68) >> 7, (lcd_height * 6) >> 5, (lcd_height * 5) >> 5, 0x0Fu);
  sp_panel.fillCircle((lcd_height * 68) >> 7, (lcd_height * 6) >> 5, (lcd_height * 2) >> 5, 0x08u);
  sp_panel.drawCircle((lcd_height * 68) >> 7, (lcd_height * 6) >> 5, (lcd_height * 2) >> 5, 0x0Cu);
  for (int i = 1; i < 16; ++i)
  {
    sp_panel.setPaletteColor(i, sp_panel.color888((i - 1) * 10, (i - 1) * 10, (i - 1) * 10));
    sp_panel.fillArc((lcd_height * 24) >> 7, (lcd_height * 6) >> 5, (lcd_height * 21) >> 7, (lcd_height * 20) >> 7, 110 + i * 10, 430 - i * 10, i);
    sp_panel.fillArc((lcd_height * 68) >> 7, (lcd_height * 6) >> 5, (lcd_height * 21) >> 7, (lcd_height * 20) >> 7, 110 + i * 10, 430 - i * 10, i);
    sp_panel.fillArc((lcd_height * 24) >> 7, (lcd_height * 6) >> 5, (lcd_height * 20) >> 7, (lcd_height * 19) >> 7, 110 + i * 10, 430 - i * 10, 16 - i);
    sp_panel.fillArc((lcd_height * 68) >> 7, (lcd_height * 6) >> 5, (lcd_height * 20) >> 7, (lcd_height * 19) >> 7, 110 + i * 10, 430 - i * 10, 16 - i);
  }
  sp_panel.setPivot(0, (lcd_height * 6) >> 5);

  sp_needle.setColorDepth(2);
  sp_needle.createSprite(36, 13);
  sp_needle.fillRect(0, 5, sp_needle.width(), 3, 1);
  sp_needle.fillCircle(7, 6, 6, 2);
  sp_needle.setPivot(7, 6);
  sp_needle.setPaletteColor(1, TFT_RED);
  #endif

  texture_palette_16x2x2[0][texture_palette_id_t::pal_inside_0] = lgfx::swap565(64, 64, 64) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_inside_1] = lgfx::swap565(48, 48, 48) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_inside_2] = lgfx::swap565(80, 80, 80) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_inside_3] = lgfx::swap565(96, 96, 96) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_outside_0] = lgfx::swap565(0, 128, 0) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_outside_1] = lgfx::swap565(0, 48, 0) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_outside_2] = lgfx::swap565(128, 160, 0) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_outside_3] = lgfx::swap565(144, 192, 0) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_red_0] = lgfx::swap565(255, 0, 0) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_red_1] = lgfx::swap565(255, 0, 0) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_red_2] = lgfx::swap565(255, 0, 0) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_red_3] = lgfx::swap565(255, 0, 0) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_white_0] = lgfx::swap565(255, 255, 255) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_white_1] = lgfx::swap565(239, 239, 239) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_white_2] = lgfx::swap565(223, 223, 223) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_white_3] = lgfx::swap565(207, 207, 207) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_flag_0] = lgfx::swap565(255, 255, 255) * 0x10001u;
  texture_palette_16x2x2[0][texture_palette_id_t::pal_flag_1] = lgfx::swap565(0, 0, 0) * 0x10001u;

  memcpy(texture_palette_16x2x2[1], texture_palette_16x2x2[0], sizeof(uint32_t) * texture_palette_id_t::pal_max);
  memcpy(&texture_palette_16x2x2[1][pal_inside_0], &texture_palette_16x2x2[0][pal_outside_0], sizeof(uint32_t) * 4);
  memcpy(&texture_palette_16x2x2[1][pal_outside_0], &texture_palette_16x2x2[0][pal_inside_0], sizeof(uint32_t) * 4);


  for (size_t i = 0; i < texture_id_t::texture_id_max; ++i)
  {
    sp_texture[i].setColorDepth(8);
    sp_texture[i].setPsram(false);
    sp_texture[i].createSprite(TEXTURE_SIZE, TEXTURE_SIZE);
  }
  for (size_t idx = outside; idx <= outside; ++idx)
  { /// コース外テクスチャ;
    sp_texture[idx].fillScreen(texture_palette_id_t::pal_outside_0);
    for (size_t i = 0; i < 64; ++i)
    {
      sp_texture[idx].fillCircle(rand() & (TEXTURE_SIZE - 2), rand() & (TEXTURE_SIZE - 2), 1, (uint8_t)(texture_palette_id_t::pal_outside_0 | (i & 3)));
    }
  }

  for (size_t idx = road_1; idx <= road_1; ++idx)
  { /// 道テクスチャ;
    sp_texture[idx].fillScreen(texture_palette_id_t::pal_inside_0);
    auto buf = (uint8_t*)sp_texture[idx].getBuffer();
    for (size_t i = 0; i < 64; ++i)
    {
      buf[rand() & (TEXTURE_SIZE * TEXTURE_SIZE - 1)] = texture_palette_id_t::pal_inside_0 | (i & 3);
    }
  }
  sp_texture[texture_id_t::flag_1].fillScreen(texture_palette_id_t::pal_flag_0);
  for (size_t i = 0; i < 8; ++i)
  {
    size_t x = (i & 3) * TEXTURE_SIZE >> 2;
    size_t y = ((i & 1) + ((i >> 2) << 1)) * TEXTURE_SIZE >> 2;
    sp_texture[texture_id_t::flag_1].fillRect(x, y, TEXTURE_SIZE >> 2, TEXTURE_SIZE >> 2, texture_palette_id_t::pal_flag_1);
  }

  setupTexture(texture_000111111, sizeof(texture_000111111), &sp_texture[texture_id_t::curb_000111111], false);
  setupTexture(texture_000111111, sizeof(texture_000111111), &sp_texture[texture_id_t::curb_011011011], false, true);
  setupTexture(texture_000111000, sizeof(texture_000111000), &sp_texture[texture_id_t::curb_000111000], false);
  setupTexture(texture_000111000, sizeof(texture_000111000), &sp_texture[texture_id_t::curb_010010010], false, true);
  setupTexture(texture_000110111, sizeof(texture_000110111), &sp_texture[texture_id_t::curb_000110111], false);
  setupTexture(texture_000110111, sizeof(texture_000110111), &sp_texture[texture_id_t::curb_011011001], false, true);
  setupTexture(texture_100111111, sizeof(texture_100111111), &sp_texture[texture_id_t::curb_100111111], false);
  setupTexture(texture_100111111, sizeof(texture_100111111), &sp_texture[texture_id_t::curb_111011011], false, true);
  setupTexture(texture_010010111, sizeof(texture_010010111), &sp_texture[texture_id_t::curb_010010111], false);
  setupTexture(texture_010010111, sizeof(texture_010010111), &sp_texture[texture_id_t::curb_001111001], false, true);
  setupTexture(texture_101101111, sizeof(texture_101101111), &sp_texture[texture_id_t::curb_101101111], false);
  setupTexture(texture_101101111, sizeof(texture_101101111), &sp_texture[texture_id_t::curb_111001111], false, true);
  setupTexture(texture_001101111, sizeof(texture_001101111), &sp_texture[texture_id_t::curb_001101111], false);
  setupTexture(texture_001101111, sizeof(texture_001101111), &sp_texture[texture_id_t::curb_011001111], false, true);
  setupTexture(texture_000010111, sizeof(texture_000010111), &sp_texture[texture_id_t::curb_000010111], false);
  setupTexture(texture_000010111, sizeof(texture_000010111), &sp_texture[texture_id_t::curb_001011001], false, true);
  setupTexture(texture_100111000, sizeof(texture_100111000), &sp_texture[texture_id_t::curb_100111000], false);
  setupTexture(texture_100111000, sizeof(texture_100111000), &sp_texture[texture_id_t::curb_110010010], false, true);
  setupTexture(texture_100111001, sizeof(texture_100111001), &sp_texture[texture_id_t::curb_100111001], false);
  setupTexture(texture_100111001, sizeof(texture_100111001), &sp_texture[texture_id_t::curb_110010011], false, true);
  setupTexture(texture_000010000, sizeof(texture_000010000), &sp_texture[texture_id_t::curb_000010000], false);
  setupTexture(texture_100110111, sizeof(texture_100110111), &sp_texture[texture_id_t::curb_100110111], false);
  setupTexture(texture_000110110, sizeof(texture_000110110), &sp_texture[texture_id_t::curb_000110110], false);

  display.startWrite();

  /*
    for (size_t i = 0; i < texture_id_t::texture_id_max; ++i)
    {
      //sp_texture[i].pushSprite(&display, (i % 10) * 32, ((int)(i / 10)) * 32);
      auto buf = (uint8_t*)sp_texture[i].getBuffer();
      for (size_t y = 0; y < TEXTURE_SIZE; ++y)
      {
        for (size_t x = 0; x < TEXTURE_SIZE; ++x)
        {
          display.writePixel((i % 8) * 32 + x, ((int)(i / 8)) * 32 + y, (uint16_t)lgfx::getSwap16((uint16_t)texture_palette_16x2x2[0][buf[x + y * TEXTURE_SIZE]]));
        }
      }
    }
    lgfx::delay(1000);
  //*/

  // for countdown
  cd_sprite.setColorDepth(1);
  cd_sprite.setTextColor(TFT_WHITE);
  cd_sprite.createSprite(6 * 3,8);
  cd_sprite.setFont(&fonts::Font0);

  // ESP-NOW / gob_esp_now
  {
    comm.registerNotifyCallback(comm_callback);
    comm.registerTransceiver(&startTRX);
    comm.registerTransceiver(&inputTRX);
    auto cfg = comm.config();
    cfg.task_stack_size = 1024*4;
    cfg.update_priority = 0;  // call update myself
    cfg.receive_priority = 3;
    cfg.receive_core = 0;
    //cfg.receive_queue_size = 8;
    /*
    // Disable force ACK (By posting to each other, they also serve as ACK)
    cfg.cumulativeAckTimeout = 0;
    cfg.maxCumAck = 0;
    */
    comm.begin(APP_ID, cfg);
    //    esp_wifi_config_espnow_rate(WIFI_IF_STA, WIFI_PHY_RATE_54M);
    M5_LOGI("heap:after comm.begin %u",esp_get_free_heap_size());
  }
  
  // task
  auto ret = xTaskCreatePinnedToCore(gameTask, "gameTask", 1024 * 4, nullptr, 2 /*priority*/, nullptr, PRO_CPU_NUM /*core*/);
  M5_LOGI("create task:%d %u", ret, esp_get_free_heap_size());
  if(ret != pdPASS)
  {
      M5_LOGE("Failed to create task");
      display.clear(TFT_RED);
      display.drawString("Failed to create task", 0, 0);
      while(true) { delay(1000); }
  }
  // M5_LOGI("D:%u D+I:%u I:%u", heap_caps_get_free_size(MALLOC_CAP_8BIT), heap_caps_get_free_size(MALLOC_CAP_32BIT),
  //         heap_caps_get_free_size(MALLOC_CAP_32BIT) - heap_caps_get_free_size(MALLOC_CAP_8BIT));
  display.clear(TFT_ORANGE);
}

bool drawCountdown(LGFX_Sprite* sp, int sec, int yoff)
{
  if(sec < 0 || sec > 3) { return false; }
  
  static long ms{};
  static time_t prev{11111};
  String str(sec);
  if(sec == 0) { str = "GO!"; }

  if(prev != sec)
  {
    prev = sec;
    ms = lgfx::millis();
    cd_sprite.clear(0);
    cd_sprite.drawString(str, (sec == 0) ? 0 : 6, 0);
  }

  auto now = lgfx::millis();
  float scale = (1000.0f - (now - ms)) * 0.048f;
  cd_sprite.pushRotateZoom(sp,
                           display.width()/2 + scale/2,
                           display.height()/2 - yoff + scale/2,
                           0, scale, scale, 0);
  return scale < 1.0f && sec == 0;
}

void drawChooseConnection(LGFX_Device* gfx)
{
  gfx->setTextSize(2,2);
  gfx->drawString("Push enter to HOST", 0, gfx->height()/2);
  gfx->setTextSize(1,1);
}


void drawWaiting(LGFX_Device* gfx)
{
  gfx->setTextSize(2,2);
  gfx->setCursor(16, gfx->height()/2);
  gfx->fillRect(16, gfx->height()/2, gfx->width() - 16, 8*2);
  gfx->printf("[%u] Waiing HOST", deviceId);
  gfx->setTextSize(1,1);
}

void drawStageSelect(LGFX_Device* gfx)
{
  float zoom = lcd_height / (300.0f);
  int pos_x256 = stage_index_x256;
  int stage = (pos_x256 + 128) >> 8;
  pos_x256 -= stage << 8;
  if ((size_t)stage >= stage_data_max) { stage = 0; }

  LGFX_Sprite sp_stage;
  sp_stage.setColorDepth(1);
  sp_stage.setBuffer((void*)stage_data_list[stage].map, stage_data_list[stage].width, stage_data_list[stage].height, 1);
  sp_stage.setPivot(stage_data_list[stage].width >> 1, stage_data_list[stage].height >> 1);
  sp_stage.createPalette();
  for (int y = 0; y < lcd_height; y += sprite_height)
  {
    flip = flip ? 0 : 1;
    auto sp = &sprites[flip];
    sp->clear();
    int px = (sp->width() >> 1) - pos_x256;
    int py = (lcd_height >> 1) - y;
    sp_stage.pushRotateZoom(sp, px, py, stage_select_angle, zoom, zoom, 0);

    sprites[flip].pushSprite(gfx, 0, y);
  }
}

void drawRacing(LGFX_Device* gfx)
{
  lcd_width = gfx->width();
  lcd_height = gfx->height();
  int f = car[deviceId].f;
  auto rcos = icos(f);
  auto rsin = isin(f);
  int dxx = rcos;
  int dxy = rsin;
  int dyx = -rsin << 1;
  int dyy = rcos << 1;
  int cxx = car[deviceId].x - dxx;
  int cxy = car[deviceId].y - dxy;
  int line_number = lcd_height >> 7;
  uint8_t* sp_map_buffer = (uint8_t*)sp_map.getBuffer();

  static constexpr int ghost_size = 80;

  int ghost_xs = 0;
  int ghost_xe = -1;
  int ghost_ys = 0;
  int ghost_ye = -1;
  int ghost_x = car[deviceId ^ 1].x;
  int ghost_y = car[deviceId ^ 1].y;
  if (ghost_x >= 0)
  {
    ghost_xs = (ghost_x - (ghost_size << 8)) >> 16;
    ghost_xe = (ghost_x + (ghost_size << 8)) >> 16;
    ghost_ys = (ghost_y - (ghost_size << 8)) >> 16;
    ghost_ye = (ghost_y + (ghost_size << 8)) >> 16;
  }

  for (int y = 0; y < lcd_height; y += sprite_height)
  {
    flip = flip ? 0 : 1;
    auto sp = &sprites[flip];
    auto buf = (uint32_t*)sp->getBuffer();
    int yloop = sprite_height;

    if (y == 0)
    {
      int back_x = (f * sp_background.width()) >> 9;
      if (back_x > sp_background.width()) { back_x -= sp_background.width(); }
      sp_background.pushSprite(sp, sp_background.width() - back_x, 0);
      sp_background.pushSprite(sp, -back_x, 0);
      buf += (sp->width() >> 1) * sp_background.height();
      yloop -= sp_background.height();
    }
    if (y >= lcd_height - sprite_height)
    {
      yloop -= (lcd_height * 3) >> 4;
    }
    do
    {
      ++line_number;
      int color_base1 = lcd_height / line_number;
      //      if (color_base != new_color_base)
      {
        int v1 = color_base1 + 40;
        int v2 = color_base1 + 45;
        if ((line_number ^ fpsCounter) & 1) { std::swap(v1, v2); }
        texture_palette_16x2x2[0][texture_palette_id_t::pal_inside_1] = lgfx::swap565(v1, v1 + 2, v1 + 4) << 16 | lgfx::swap565(v2, v2 + 2, v2 + 4);
        v1 += 16;
        v2 += 16;
        texture_palette_16x2x2[0][texture_palette_id_t::pal_inside_0] = lgfx::swap565(v1, v1 + 2, v1 + 4) << 16 | lgfx::swap565(v2, v2 + 2, v2 + 4);
        v1 += 16;
        v2 += 16;
        texture_palette_16x2x2[0][texture_palette_id_t::pal_inside_2] = lgfx::swap565(v1, v1 + 2, v1 + 4) << 16 | lgfx::swap565(v2, v2 + 2, v2 + 4);
        v1 += 16;
        v2 += 16;
        texture_palette_16x2x2[0][texture_palette_id_t::pal_inside_3] = lgfx::swap565(v1, v1 + 2, v1 + 4) << 16 | lgfx::swap565(v2, v2 + 2, v2 + 4);

        v1 = color_base1;
        v2 = color_base1 + 5;
        if ((line_number ^ fpsCounter) & 1) { std::swap(v1, v2); }
        texture_palette_16x2x2[0][texture_palette_id_t::pal_outside_0] = lgfx::swap565(v1 + 4, v1 + 98, v1) << 16 | lgfx::swap565(v2 + 4, v2 + 98, v2);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_outside_1] = lgfx::swap565(v1 + 12, v1 + 50, v1) << 16 | lgfx::swap565(v2 + 12, v2 + 50, v2);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_outside_2] = lgfx::swap565(v1 + 4, v1 + 130, v1) << 16 | lgfx::swap565(v2 + 4, v2 + 130, v2);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_outside_3] = lgfx::swap565(v1 + 100, v1 + 162, v1) << 16 | lgfx::swap565(v2 + 100, v2 + 162, v2);

        texture_palette_16x2x2[0][texture_palette_id_t::pal_red_1] = lgfx::swap565(v1 + 223, v1, v1 + 4) << 16 | lgfx::swap565(v2 + 223, v2, v2 + 4);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_red_2] = lgfx::swap565(v1 + 223, v1, v1 + 4) << 16 | lgfx::swap565(v2 + 223, v2, v2 + 4);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_red_3] = lgfx::swap565(v1 + 223, v1, v1 + 4) << 16 | lgfx::swap565(v2 + 223, v2, v2 + 4);
        v1 = std::min(v1 + 223, 255);
        v2 = std::min(v2 + 223, 255);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_flag_0] = lgfx::swap565(v1, v1, v1) << 16 | lgfx::swap565(v2, v2, v2);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_white_1] = lgfx::swap565(v1, v1, v1) << 16 | lgfx::swap565(v2, v2, v2);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_red_1] = lgfx::swap565(v1, v1 - 190, v1 - 188) << 16 | lgfx::swap565(v2, v2 - 190, v2 - 188);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_flag_1] = lgfx::swap565(v1 - 192, v1 - 190, v1 - 188) << 16 | lgfx::swap565(v2 - 192, v2 - 190, v2 - 188);
        v1 -= 8;
        v2 -= 8;
        texture_palette_16x2x2[0][texture_palette_id_t::pal_white_0] = lgfx::swap565(v1, v1, v1) << 16 | lgfx::swap565(v2, v2, v2);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_red_0] = lgfx::swap565(v1, v1 - 190, v1 - 188) << 16 | lgfx::swap565(v2, v2 - 190, v2 - 188);
        v1 -= 8;
        v2 -= 8;
        texture_palette_16x2x2[0][texture_palette_id_t::pal_white_2] = lgfx::swap565(v1, v1, v1) << 16 | lgfx::swap565(v2, v2, v2);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_red_2] = lgfx::swap565(v1, v1 - 190, v1 - 188) << 16 | lgfx::swap565(v2, v2 - 190, v2 - 188);
        v1 -= 8;
        v2 -= 8;
        texture_palette_16x2x2[0][texture_palette_id_t::pal_white_3] = lgfx::swap565(v1, v1, v1) << 16 | lgfx::swap565(v2, v2, v2);
        texture_palette_16x2x2[0][texture_palette_id_t::pal_red_3] = lgfx::swap565(v1, v1 - 190, v1 - 188) << 16 | lgfx::swap565(v2, v2 - 190, v2 - 188);


        memcpy(&texture_palette_16x2x2[1][pal_flag_0], &texture_palette_16x2x2[0][pal_flag_0], sizeof(uint32_t) * 10);
        memcpy(&texture_palette_16x2x2[1][pal_inside_0], &texture_palette_16x2x2[0][pal_outside_0], sizeof(uint32_t) * 4);
        memcpy(&texture_palette_16x2x2[1][pal_outside_0], &texture_palette_16x2x2[0][pal_inside_0], sizeof(uint32_t) * 4);
      }
      //*/
      uint32_t check_ghost = false;
      uint32_t prev_texture_id = texture_id_t::outside;
      const uint8_t* texture = (uint8_t*)sp_texture[texture_id_t::outside].getBuffer();;
      const uint32_t* palette = texture_palette_16x2x2[0];
      uint32_t prev_idx = 0;
      uint32_t invert_mask = 0;

      int xloop = lcd_width >> 1;

      int dyx_tilt = dyx / line_number;
      int dyy_tilt = dyy / line_number;

      int tiltval = (lcd_height << 8) / line_number;
      uint32_t cx = cxx + ((dxx * tiltval) >> 8) - (dyx_tilt * (xloop >> 1));
      uint32_t cy = cxy + ((dxy * tiltval) >> 8) - (dyy_tilt * (xloop >> 1));
      do
      {
        cy += dyy_tilt;
        cx += dyx_tilt;
        int my = (cy >> 16);
        int mx = (cx >> 16);
        size_t idx = mx + (my << 8);
        if (prev_idx != idx)
        {
          prev_idx = idx;
          if ((mx | my) < 256)
          {
            check_ghost = ((fpsCounter ^ line_number) & 1) && (mx >= ghost_xs && mx <= ghost_xe) && (my >= ghost_ys && my <= ghost_ye);
            uint32_t texture_id = sp_map_buffer[idx];
            if (prev_texture_id != texture_id)
            {
              prev_texture_id = texture_id;
              texture = (const uint8_t*)sp_texture[texture_id & 0x1F].getBuffer();
              palette = texture_palette_16x2x2[texture_id & texture_id_t::io_invert ? 1 : 0];
              invert_mask = ((texture_id & texture_id_t::ud_invert) ? 0x3E0 : 0)
                | ((texture_id & texture_id_t::lr_invert) ? 0x01F : 0);
            }
          }
          if (prev_texture_id == texture_id_t::outside)
          {
            invert_mask = (((idx * 7) & 8) ? 0x3E0 : 0)
              | (((idx * 3) & 8) ? 0x01F : 0);
          }
        }
        if (check_ghost)
        {
          bool hit = false;
          int len_w = abs((int)cx - ghost_x) >> 8;
          if (len_w < ghost_size)
          {
            int len_h = abs((int)cy - ghost_y) >> 8;
            if (len_h < ghost_size)
            {
              hit = ((len_w + len_h) < ghost_size) || ((len_w * len_w + len_h * len_h) < (ghost_size * ghost_size));
              if (hit)
              {
                *buf++ = 0;
                check_ghost = 2;
                continue;
              }
            }
          }
          check_ghost &= 1;
        }
        *buf++ = palette[texture[invert_mask ^ (((cx >> 11) & 0x1F) + ((cy >> 6) & 0x3E0))]];
      } while (--xloop);
    } while (--yloop);

    if (y >= lcd_height - sprite_height)
    {
      //      sp->fillRect((lcd_width >> 1) - (lcd_height * 2) >> 4, ((lcd_height * 23) >> 5) - y, (lcd_height * 2)>>4, lcd_height >> 4, 0x333333u);
      //      sp->fillRect(0, ((lcd_height * 24) >> 5) - y, lcd_width, lcd_height >> 4, 0x282828u);
      for (int i = 0; i < 8; ++i)
      {
        sp->drawFastHLine(0, ((lcd_height * 26) >> 5) - y + i, lcd_width, sp->color565(128 - i * 16, 128 - i * 16, 128 - i * 16));
      }
      sp->fillRect(0, ((lcd_height * 26) >> 5) - y + 8, lcd_width, sp->height(), 0);
      /*
            sp->fillCircle((lcd_width >> 1) - ((lcd_height * 3) >> 4), ((lcd_height * 31) >> 5) - y, (lcd_height * 4) >> 5, 0xCCCCCCu);
            sp->fillCircle(lcd_width >> 1, ((lcd_height * 15) >> 4) - y, (lcd_height * 5) >> 5, 0xCCCCCCu);
            sp->drawCircle(lcd_width >> 1, ((lcd_height * 15) >> 4) - y, (lcd_height * 5) >> 5, 0x333333u);
      */
      float zoom = ((lcd_height * 5) >> 5) / 32.0f;
#if 0      
      sp_panel.pushSprite(sp, (lcd_width - sp_panel.width()) >> 1, sp->height() - sp_panel.height(), 0);

      sp_needle.pushRotateZoom(sp, ((lcd_width - sp_panel.width()) >> 1) + ((lcd_height * 24) >> 7), ((lcd_height * 6) >> 5) + sp->height() - sp_panel.height(), 145 + car[deviceId].speed, zoom, zoom, 0);
      sp_needle.pushRotateZoom(sp, ((lcd_width - sp_panel.width()) >> 1) + ((lcd_height * 68) >> 7), ((lcd_height * 6) >> 5) + sp->height() - sp_panel.height(), 145 + car[deviceId].tacho, zoom, zoom, 0);

      sp_steering.pushRotateZoom(sp, lcd_width >> 1, std::max<int>(sp_steering.height() >> 1, sprite_height), player_steering_angle / 256.0f, 1.0f, 1.0f, 0);
      sp_steering.pushRotateZoom(sp, lcd_width >> 1, std::max<int>(sp_steering.height() >> 1, sprite_height), player_steering_angle / 256.0f, -1.0f, 1.0f, 0);
#endif

      {
        auto stop = sprite_height - sp->fontHeight() * (2 - deviceId);
        constexpr int16_t sleft = 180;
        constexpr int16_t swid = 60;
        int16_t shgt = sp->fontHeight();
        sp->drawRect(sleft, stop, swid, shgt, TFT_WHITE);
        sp->drawFastVLine(sleft + swid / 2, stop, shgt, TFT_RED);
        sp->drawFastVLine(sleft + swid * ((player_steering_angle + 32768) / 65536.f), stop, shgt, TFT_WHITE);
      }
      
      sp->setCursor(1, sprite_height - sp->fontHeight() * 2);
      sp->setTextColor(TFT_WHITE);
      for(auto& s : lap_str) { sp->println(s); }

      sp_map.setPivot(car[deviceId].x >> 16, car[deviceId].y >> 16);
      int px = sp->width() - (sprite_height >> 1);
      int py = sprite_height * 3 >> 2;
      sp->setClipRect(sp->width() - sprite_height, 0, sprite_height, sprite_height);
      zoom = sprite_height / 64.0f;
      sp_map.pushRotateZoom(sp, px, py, ((1792 - f) * 360) / 1024.0f, zoom, zoom, texture_id_t::outside);
      sp->fillCircle(px, py, 2, TFT_CYAN);
      sp->clearClipRect();
    }

    //    if(drawCountdown(sp, countDown, y)) { countDown = -1; }

    sprites[flip].pushSprite(gfx, 0, y);
  }
}

void loop(void)
{
  ++fpsCounter;
  switch (game_mode)
  {
  default:
    display.clear(0);
    break;
  case game_mode_t::choose_connection:
    drawChooseConnection(&display);
    break;
  case game_mode_t::waiting:
    drawWaiting(&display);
    break;
  case game_mode_t::stage_select:
    drawStageSelect(&display);
    break;
  case game_mode_t::racing:
    drawRacing(&display);
    break;
  }
  display.display();
}

constexpr const uint8_t map_ti[8192] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xfc, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x03, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x07, 0xf8, 0xfe, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x1f, 0xe0, 0x1f, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x3f, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0xff, 0x80, 0x0f, 0x80, 0x00, 0x00, 0xf8, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x01, 0xfe, 0x00, 0x0f, 0x80, 0x00, 0x00, 0xf8, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x03, 0xfc, 0x00, 0x0f, 0x80, 0x00, 0x01, 0xf0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x07, 0xf0, 0x00, 0x0f, 0x80, 0x00, 0x01, 0xf0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x1f, 0xe0, 0x00, 0x1f, 0x80, 0x00, 0x03, 0xe0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x3f, 0xc0, 0x00, 0x1f, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x3f, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xe0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0xc0, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0x80, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7e, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xfe, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xfc, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xf8, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xf0, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xe0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0f, 0xc0, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x1f, 0x80, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3f, 0x80, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x7f, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xfe, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
0xfc, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
0xf8, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0xf0, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0xe0, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
0xc0, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
0x80, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f,
0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e,
0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,
0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8,
0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0,
0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0,
0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0,
0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0,
0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80,
0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00,
0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00,
0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00,
0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00,
0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00,
0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00,
0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00,
0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00,
0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00,
0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00,
0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00,
0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00,
0x00, 0x00, 0x1f, 0xe0, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x0a, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xf0, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x15, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0xf8, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0xfe, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xff, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7f, 0x80, 0x0f, 0xc0, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1f, 0xf0, 0x3f, 0xc0, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x01, 0xf0,
0x00, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x0f, 0xff,
0xc0, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x3f, 0xff,
0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0xff, 0xff,
0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x01, 0xff, 0xff,
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x03, 0xfe, 0x03,
0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x07, 0xf8, 0x00,
0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x1f, 0xe0, 0x00,
0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x3f, 0xc0, 0x00,
0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x7f, 0x80, 0x00,
0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0xff, 0x00, 0x00,
0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x01, 0xfc, 0x00, 0x00,
0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x03, 0xf8, 0x00, 0x00,
0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x07, 0xf0, 0x00, 0x00,
0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x1f, 0xe0, 0x00, 0x00,
0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x3f, 0x80, 0x00, 0x00,
0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00,
0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00,
0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00,
0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00,
0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00,
0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00,
0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3e, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3e, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7e, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x78, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x78, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7e, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0x80, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0xe0, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xf0, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xf8, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xff, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

constexpr const uint8_t map_tsukuba[5664] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff,
0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff,
0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xc0, 0x00,
0x00, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf0, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00,
0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf0, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xc0, 0x00, 0x00,
0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x07, 0xf8, 0x1f, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xe0, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xe0, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xe0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xe0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xe0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xf0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf0, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf0, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xf8, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x78, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xc0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7c, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f,
0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc,
0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8,
0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0,
0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0,
0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80,
0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80,
0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80,
0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0,
0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xc0,
0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xe0,
0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x03, 0xf0,
0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x01, 0xfc,
0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 0xfe,
0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x7f,
0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x3f,
0xc3, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0x00, 0x1f,
0xe3, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x07,
0xf9, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x03,
0xfd, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x01,
0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00,
0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00,
0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00,
0x0f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00,
0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00,
0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00,
0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x00,
0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0,
0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0,
0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc,
0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff,
0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff,
0xe0, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f,
0xf8, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
0xfe, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
0xff, 0x80, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xff, 0xe0, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3f, 0xfc, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xff, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xff, 0xc0, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7f, 0xf0, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xfc, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xff, 0x80, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xff, 0xe0, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3f, 0xf8, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xfe, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xff, 0xc0, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x0f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x7f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x3e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x3e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x7e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0x00, 0x7c, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0xfc, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x03, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x1f, 0xf0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

constexpr const uint8_t map_fuji_short[3296] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x1f, 0xf0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x1e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80,
0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80,
0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0,
0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0,
0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0,
0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
0x01, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xe0,
0x03, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xe0,
0x03, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xe0,
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xe0,
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xe0,
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe0,
0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x7f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x3f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x3f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x9f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x9f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x9f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x9f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x9f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x9f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x9f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x1f, 0xe0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x3f, 0xc0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfc, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xbf, 0x3f, 0xc0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x3f, 0x7f, 0xc0,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xfc,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x3f, 0xff, 0x80,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xfe,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x7f, 0xff, 0x80,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x7f, 0xff, 0x00,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff,
0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0xff, 0xff, 0x00,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x03, 0xff, 0xff, 0xf0, 0x1f, 0xff,
0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf1, 0xff, 0xfe, 0x00,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 0xff,
0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe3, 0xff, 0xfc, 0x00,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xf0, 0x00, 0x00, 0x1f,
0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xf8, 0x00,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x07,
0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x03,
0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xc0, 0x00,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x03,
0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xfe, 0x00, 0x00,
0x03, 0xf0, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x01,
0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 0x00, 0x00,
0x03, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01,
0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0x80, 0x00, 0x00,
0x03, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00,
0x03, 0xff, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00,
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xff, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xff, 0x00, 0x00, 0x01, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xff, 0x80, 0x00, 0x0f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7f, 0xc0, 0x00, 0x7f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7f, 0xc0, 0x03, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0xe0, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xf8, 0x7f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x03, 0xff, 0x80, 0x00, 0x00, 0x00,
0x00, 0x7f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00, 0x00,
0x01, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x3f, 0xff, 0xf8, 0x00, 0x00, 0x00,
0x0f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xff, 0xff, 0x80, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x7f, 0xff, 0xfe, 0x00, 0x00, 0x00,
0x7f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x03,
0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xff, 0x80, 0x00, 0x1f,
0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x03, 0xff, 0x81, 0xff, 0xc0, 0x00, 0xff,
0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x03, 0xfe, 0x00, 0x7f, 0xf0, 0x07, 0xff,
0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0xfc, 0x00, 0x3f, 0xfc, 0x3f, 0xff,
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xf8, 0x00, 0x1f, 0xff, 0xff, 0xff,
0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 0x00, 0x0f, 0xf0, 0x00, 0x0f, 0xff, 0xff, 0xff,
0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xff,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xe0, 0x1f, 0xc0, 0x00, 0x0f, 0xff, 0xff, 0xf8,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x7f, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0xc0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xff, 0xfe, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0xf0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xfc, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

constexpr const uint8_t map_nakayama[4896] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0f, 0xff, 0xff, 0xfe, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x03,
0xff, 0xff, 0xff, 0xc0, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0xff,
0xff, 0xff, 0xf0, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0xff,
0xff, 0xf8, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff,
0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x1f, 0xf0, 0x01, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3f, 0xe0, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7f, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00,
0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xfc, 0x07, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1f, 0xff,
0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xf8, 0x0f, 0xfe, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0xf8, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0f, 0xf0, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xf0, 0x00, 0xff, 0xf0, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xe0, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff,
0xe0, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0xe0, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xfe, 0x00,
0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3f, 0xc0, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7f, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7f, 0x80, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xff, 0x80, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xff, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
0xff, 0xff, 0xfc, 0x00, 0x1f, 0xe0, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xff, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xbf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xc0, 0x0f, 0xf0, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xff, 0x00, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xf0, 0x07, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xfe, 0x00, 0x7f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xfc, 0x03, 0xf8, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x01, 0xf8, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfe, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0x81, 0xfc, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff,
0xff, 0xff, 0xff, 0xff, 0xc0, 0xfc, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfc, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff,
0xe0, 0x00, 0x07, 0xff, 0xe0, 0xfe, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xfc, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
0x00, 0x00, 0x01, 0xff, 0xf0, 0x7e, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7f, 0xf8, 0x7f, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xfc, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1f, 0xf8, 0x3f, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xf8, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xfc, 0x3f, 0x80, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xfc, 0x1f, 0x80, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xfe, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xfe, 0x0f, 0xc0, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xfe, 0x0f, 0xe0, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7f, 0x07, 0xe0, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7f, 0x07, 0xf0, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0x03, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0x83, 0xf8, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0x81, 0xf8, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0x81, 0xfc, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0x81, 0xfc, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0x81, 0xfc, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3f, 0x81, 0xfc, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7f, 0x81, 0xfc, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf8,
0x00, 0x00, 0x00, 0x00, 0x7f, 0x81, 0xfc, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff,
0xc0, 0x00, 0x00, 0x00, 0xff, 0x81, 0xfc, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff,
0xfe, 0x00, 0x00, 0x01, 0xff, 0x81, 0xfc, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff,
0xff, 0xf0, 0x00, 0x03, 0xff, 0x03, 0xfc, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0x80, 0x0f, 0xff, 0x03, 0xf8, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xff, 0xfc, 0x00, 0x0f,
0xff, 0xff, 0xfc, 0x3f, 0xfe, 0x07, 0xf8, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
0x7f, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xf0, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00,
0x03, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xf0, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1f, 0xff, 0xff, 0xf8, 0x0f, 0xe0, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xff, 0xff, 0xe0, 0x1f, 0xe0, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x3f, 0xff, 0x80, 0x1f, 0xc0, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xfe, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfc, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0xff, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x7f, 0xe0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x0f, 0xc0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x0f, 0xc0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x07, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x07, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x07, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x07, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x0f, 0xe0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x0f, 0xc0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x1f, 0xc0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x1f, 0x80,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x3f, 0x80,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x3f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x7f, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x7e, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x00, 0xfe, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x01, 0xfc, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x03, 0xfc, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x0f, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xe0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
